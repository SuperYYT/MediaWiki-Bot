package ReleaseFile

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _resources_language_en_us_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x5b\x6f\x13\x47\x14\x7e\x5f\x69\xff\xc3\xd1\x5a\xa8\x45\x22\x76\xfb\x6a\x55\x48\xc8\x82\x42\x9b\x50\x94\x8b\x10\x0a\x91\x18\xef\x1c\xaf\xa7\x5e\xcf\x6c\x67\x66\x71\x0c\x42\xa2\x15\xe5\x1a\xd4\x3e\x00\xe2\x56\x6e\x82\x0a\x81\xb8\x34\x20\x25\x21\xa1\xfe\x33\xde\xb5\xfb\x94\xbf\x50\xcd\xec\xda\xce\x8d\xb4\x6a\xfd\x62\x69\x67\xce\x77\x3b\x67\x66\x0a\xe3\x84\x07\x31\x09\x10\xea\x44\x41\x15\x91\x83\x5f\x27\x3c\x40\x0a\x5a\x00\xf2\xb1\x99\x29\xd7\x19\xec\x99\x10\x94\xd5\x18\xd2\xa9\xd8\xf7\x51\xa9\x5a\x1c\x86\xed\x32\x78\xbb\x42\x9c\xdd\xf3\xc5\x39\xcf\x75\x0a\x16\x0a\xa8\x40\x05\x5c\x68\x04\x9c\x67\x4a\x6f\x85\xf6\x89\x66\x82\x1f\x22\x2c\x44\x5a\x06\xcf\xd4\x0e\x4b\xb2\x0a\xcf\x75\x5c\xa7\x30\x5d\x67\x0a\xc2\x01\x6d\x8d\x85\x08\x4c\x41\x24\xc5\x69\x46\x91\x42\xb5\x0d\x27\x4e\x4c\xc3\x57\x75\xad\x23\x55\x2e\x95\x5a\xad\x56\xb1\xdd\xd6\x45\x5f\x88\xb0\xb4\xdf\x75\x26\x08\xe3\x07\xa5\x14\x72\x9a\x45\xaa\x0c\xde\x31\x89\x4a\x01\xe1\x6d\x68\x60\xdb\xfa\x9e\x67\xba\x58\x2c\x7a\xae\x33\xc3\x49\x35\xc4\x03\x51\x14\xb6\xa7\x50\x29\x26\x78\x19\xbc\xec\xa3\xd9\x48\xcc\x02\xd4\x84\x04\x02\x1c\x5b\x90\xef\x31\x4b\x13\x4c\x12\xb6\x0f\xa2\x10\x89\x42\xf0\xeb\xe8\x37\x40\xd7\x11\xa6\x50\x6b\xc6\x03\xe5\xb9\x4e\x45\xf0\x1a\x0b\x0e\xb1\x10\x0f\xce\xfb\x18\xe9\x0c\xdd\x2a\x03\xc6\xc1\xb7\xcb\x71\xcd\x86\x62\xb6\x13\xce\x85\xae\x08\xce\xd1\xd7\x16\x7e\x93\x96\x90\xf1\xc6\x90\x18\x7c\x21\x25\xfa\x3a\x6c\x6f\x91\xb0\x81\x7e\x32\xe6\xdf\x7d\x5b\x06\x6f\x52\x54\x85\x86\xe3\x58\x3d\x2c\x44\x03\x24\xe6\x52\x00\x2d\x34\x5d\x5f\x5b\x90\x31\xe7\x8c\x07\x20\x38\x44\x42\xea\x41\x53\x8f\xc6\x34\xc0\x32\x78\xf6\x3f\xeb\xcc\x86\x68\xec\x8c\xc0\xa0\x07\x67\xea\xc5\xa6\xc0\x80\xc9\xb0\x28\x64\x50\xf4\xf9\x48\x97\xe0\x9a\xf8\xda\x86\x43\x68\x93\x71\xa6\xb4\x24\x5a\x48\xd7\x39\xce\x1a\x6c\x9c\xf1\x86\x8d\x64\x73\xf0\x16\xdd\xe8\xf8\x67\x1c\xb0\xd2\x0e\x63\x18\x4d\xe3\xbc\x36\xfd\xce\x0a\x02\x61\x90\x06\x02\x55\x9d\x09\x5e\x15\xba\x38\xdf\x3e\x53\x1a\xcc\x96\x2a\xd9\xb9\x2d\x55\x44\xb3\x49\x38\x2d\xd9\x56\x33\xae\xb4\x8c\x7d\x93\x91\xca\x5c\x57\x08\xff\x4c\x43\x8d\x71\x0a\xb3\x66\xb8\x22\x12\xe0\x9c\x69\xe1\xec\x27\xed\xcf\x6d\x1b\x0d\x92\x49\x67\x3c\x8a\xb5\x19\xe7\xbc\x83\xae\xf3\x35\x6a\x13\xc4\x11\x5e\x13\x83\x20\x36\x12\x9e\xdd\xf3\xe5\xb9\x8c\xcc\xc4\xf1\xaf\x71\x07\x27\x09\xc1\xa8\x05\x5f\xc4\x21\xb5\xe7\xac\x8a\x50\x13\x31\xa7\xfb\xa0\x1a\x67\xa5\x35\x11\x86\xa2\x65\x06\x40\xa2\x8a\x43\xad\xa0\x85\x32\xdf\xe5\x3a\x85\x91\x65\xd7\x29\xe4\xd9\xc6\x0a\xc1\x6b\x06\xe5\x63\x06\x5b\x33\x1d\xa2\x67\xc2\xfe\x21\x46\xd9\x06\x12\x10\xc6\xb3\xee\x1a\x53\x53\x48\xa4\x5f\x2f\x83\xf7\xbf\xc5\x9c\xe4\x26\x82\x0d\x12\x4e\x99\x70\x36\x88\x38\xb5\x45\x44\x16\xc2\x27\x9b\x54\x1a\x38\x73\x9d\xc2\xe7\x12\x29\x33\xc1\x59\xbb\x06\x72\x6e\x6c\xff\xc8\xfa\x5e\xd7\x29\x14\xed\x6f\x64\x6c\x32\xaf\x28\x83\x77\x92\x8f\xea\x6d\x9b\xc6\xf6\x67\x8d\xdb\x7b\x32\x17\x51\x89\xa5\x44\xae\xc3\x36\x90\xd3\x84\x85\x76\xd0\x87\x63\x58\x1e\xdc\xa0\xae\x53\xf8\x9e\x8c\x7d\x73\xcc\x75\x0a\x67\xea\x63\x95\xa3\xa3\x1b\x74\x9c\x29\x43\xb4\x1b\x4c\x39\xcb\xc7\xf2\x4d\x9b\x38\x0e\x36\x23\xdd\xce\x83\xb7\xf9\x98\xf9\x40\xf3\x11\x08\xa7\xe0\xdb\x0b\xc7\xf4\xc0\x44\xc6\x90\xda\xca\x8a\x39\x67\x8c\xab\x23\x61\x88\x01\x09\x8f\x0b\x49\xcd\x25\xda\xef\xdc\x48\xee\x3d\xe8\x76\x1e\xa7\x3f\xbe\xe9\x2e\xbf\x4a\x5e\xdd\x4e\xee\x3f\xff\xeb\xb7\x07\xe9\xbb\x9b\xc9\xc5\x9f\x93\xd7\x2b\xeb\x6b\x0b\xc9\xd2\x62\xff\xc9\xcb\x7e\xe7\x52\xba\xfa\x34\xb9\xf3\x3c\xbd\xf6\x7b\x7a\xf9\x45\x66\xbf\xd4\x62\x0d\x46\x28\x4d\x17\x2e\x75\x57\x9f\x76\x3f\x76\x7a\x37\x9e\xa7\xb7\x56\xd2\x77\x37\xfb\x6f\x96\x92\x2b\xd7\x93\x3f\xcf\xef\x7c\x54\x07\x47\xb3\x90\x03\x40\xfa\xf0\x59\xef\xfe\x35\xa3\xd3\x2e\x98\x73\x9f\xbf\x25\xbb\x61\x9b\x66\xe4\xa5\x56\x90\xe9\xe1\x01\x4a\x87\x6f\x51\xba\xb4\x9a\x5c\x7d\x94\x3c\xfd\xa3\xff\xfe\xd9\xfa\xda\x42\xbf\x73\xa7\xbb\x7c\x3d\xbd\xfd\xa6\xbb\x7c\xbe\xbb\xfc\x22\xbd\x7f\x25\xbd\x79\xb9\x77\xf7\xc2\x04\x52\x46\x4c\x6d\xef\xe5\x9d\xde\x4f\x2b\xe6\xe5\xdb\x52\x39\x3b\xdb\x0c\xe6\xe6\x92\xa5\xc5\xde\xea\x2f\xfd\x27\x2f\xb3\xd5\x7e\xe7\x52\xf7\xc3\xc5\x21\xeb\x24\x46\x48\xf4\x76\xd6\xd9\x6c\x76\x76\xae\x36\x5c\xc9\xd2\x62\x7a\xf9\xd7\xe4\xea\xc3\x6c\xc1\xc0\x65\x7c\xeb\x6b\x0b\x33\x93\xe3\xe5\x6d\x13\x3e\xa4\xb4\x6f\x3a\x52\xeb\x75\x47\x94\x8c\x39\xc7\x31\x69\x0d\x63\x9a\x89\x28\xd1\x38\x4a\xea\xde\xfb\xf4\xd6\xdb\xff\x94\xd4\xe6\xca\xee\xc7\x47\xe9\xe2\x63\x53\xb0\xc5\xcc\x76\xda\xa3\x42\xd7\x19\x0f\x38\x2a\xb5\x5d\xc1\x8e\x38\x99\x1d\xc3\x3a\xb2\xdb\xed\xbc\x4e\x6f\xac\xe4\xeb\xcd\x20\xb3\x9b\xde\x7a\xdb\xbb\x7b\xa1\xbb\xfc\x61\xc7\xfc\xbc\x8d\x5a\x76\xcc\x70\x13\xe8\x20\xc3\x4d\xa0\x79\x98\x7f\x07\x00\x00\xff\xff\x35\x12\x80\x83\x8b\x09\x00\x00")

func resources_language_en_us_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_en_us_yml,
		"resources/language/en-US.yml",
	)
}

var _resources_language_ja_jp_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4f\x4f\xdb\xd8\x17\xdd\x5b\xf2\x77\x88\x12\x55\xfa\x75\x41\xf2\x9b\x6d\x16\x95\x2a\xd4\x4e\x3b\x03\x6d\x05\x45\x5d\x50\x16\x6e\xfc\x08\x1e\x1c\x3b\x4a\x8c\xa6\xb4\xaa\x94\x67\xa7\x21\x90\x20\x98\x8a\xd0\xf2\xa7\xd0\xd0\xf0\x67\x12\x91\x30\x40\x45\xd2\x84\xc9\x87\xb9\xf6\xb3\xbb\xe2\x2b\x8c\xde\x73\xfe\x00\xc9\x74\xa4\x76\x86\x05\x42\x7a\xbe\xe7\x9c\x7b\xde\xb9\xef\xe2\x73\x0e\x12\x4e\x71\x0b\x70\xe5\xc5\xd4\xc0\xe0\x03\xc0\x25\xab\x30\x4f\x36\x4e\x01\xbf\x05\xbc\xcd\x73\x43\x82\x12\x9e\x11\xc2\x68\x58\x15\xa5\x49\x09\x89\xa3\x33\xa1\x10\x8a\xc7\x27\x67\x64\x79\x36\xe8\xf1\x76\xaa\x5f\xde\xf8\xff\xab\x6b\xc5\x5e\x9e\xf3\x31\xd0\xce\x47\x80\x8b\x80\x93\xd7\x41\x43\x82\x26\xa9\xca\x5d\x41\x92\x91\x18\xf4\x78\x29\xd2\xb5\x0a\x2f\xcf\xf1\xdc\xb0\x20\x29\x77\x62\x31\x35\xf6\x58\x8a\xc6\x83\x1e\x2f\xe0\x24\xe0\x75\xd0\xb3\x80\xcb\xa0\x1f\x82\xd1\x00\xfd\x0d\x59\x68\x00\x5e\x03\x7c\x40\xd2\x75\xd0\x33\x7e\xbf\xdf\xef\xe5\xb9\x31\x45\x78\x26\xa3\xdb\xd1\xa8\x3c\x3b\x8a\xe2\x71\x49\x55\x82\x1e\xef\xb0\x14\x13\x24\xc0\x25\xb2\x7a\xc4\xf4\x26\x5b\x47\xf6\xca\x89\x53\xca\x00\xde\x07\xbc\xe8\xd2\x5f\x34\xb2\xce\xc1\xa1\x55\x5e\x07\xfd\x0d\x18\x18\xf4\x7d\x30\x0c\xd0\x2b\xac\x6c\x0f\xf0\x12\xe0\x0f\x80\x73\xae\xd0\x41\x55\x99\x94\xc2\x77\x25\x19\xdd\x79\x1e\x42\x51\xcd\x25\x6b\xd5\x1b\x39\xd0\xf3\xa0\x17\xc0\x28\xd9\xb9\x23\xab\x5a\xa5\x05\x82\xa2\xa8\xda\xa0\xaa\x28\x28\xa4\x31\x51\x97\xc5\x1d\x7e\x64\x2c\x4b\x60\x14\xc1\x38\x61\xa4\xdf\x28\x6c\x64\x46\x79\xf8\x33\xf5\xcd\xd8\xa4\x5f\x19\xe9\x27\xe8\xd9\x3d\x55\x9d\x06\x5c\xb6\x96\xde\x9a\xcd\x3c\xe0\xec\x43\x1a\x00\x86\xfd\x91\x01\x24\x41\xcf\x5c\x34\xb2\xec\x72\x8d\xf7\xd4\x62\x23\x0d\x78\xdf\x2a\x6f\x3b\xf9\xac\x59\x3d\xf4\xf2\xdc\x83\x19\x31\x8c\x18\xec\x02\x18\x73\xee\x6f\x76\x5f\xbe\x29\x4d\x8b\xc6\x83\x81\xc0\x8b\x29\x7f\x44\x45\x61\x29\x26\xfb\xd5\x58\xd8\x1f\x52\x28\x87\xbe\x43\x75\xea\x75\xd0\x6b\xd7\x3a\xb2\xcb\x79\x7b\x39\xe5\x24\x5e\x03\x2e\x7d\x49\x7c\xb4\x3f\xe5\x7b\xdb\xe1\xb9\x27\xd2\xb4\x34\x24\x29\xd3\x2c\x11\xad\xd4\x7c\x3f\x2e\x13\x7e\x0f\xc9\xd1\xc7\xe8\xb9\x16\xf4\x78\xcd\xf3\x26\xe0\x24\x59\xad\x01\xae\x78\xda\xfd\xc4\xa7\x24\x55\x79\xa6\x6a\xfe\xe7\xb3\x2f\x02\x72\x2b\xca\xf1\xc0\x2f\xc2\xc0\x4f\x8f\x02\x83\x6a\x24\x22\x28\x62\xc0\x03\x78\xdf\x29\x36\x01\xd7\xfa\x51\xf8\xc6\xff\xd6\x9c\x09\x76\x03\x95\x71\x1a\xf7\xa8\x10\x46\x13\x80\xb3\xce\x5e\x06\x70\x01\xf0\x6f\xa0\xcf\xb3\xc0\x17\x01\x67\xd8\x1d\x6d\x5f\x34\xb2\xd6\xeb\x5d\x6b\x61\x03\x70\xa5\x1d\x96\x24\x3b\xfd\x1d\x70\x8a\xfe\xf1\xd5\x5c\xf0\xdc\x8f\x48\xa3\x5e\xde\x57\x26\xd5\xb6\x97\xe3\xd4\xcc\xb6\x8e\x97\x37\x7e\x78\xf5\xdf\x6a\x70\x1d\x01\x63\x9d\x8d\x70\x15\xf4\x37\x5d\xae\x4b\x2c\x80\xb3\x17\x8d\xac\x59\xdf\x35\xab\x19\xc0\x65\xfb\xd3\x32\xd9\xda\xbc\xfa\xf1\x36\x75\xb6\x63\x1c\xcf\xf9\x3c\x91\x70\xb0\x0b\x6c\xa4\x58\x82\xb7\xe8\xdd\x80\xae\x03\x4e\x99\xd5\x84\xf5\x79\xcf\xca\x2d\x01\x4e\x5a\xcb\x69\xd0\x97\x00\x6f\xf4\xcd\x1a\xf5\x67\x14\x09\xb1\xd0\x14\xcb\xfa\xbf\xa0\xf5\xa9\x42\x6d\xf6\x50\x7f\xbf\x5b\xe3\x3f\x0c\x5c\xa0\xed\x09\xcf\xf9\xfe\x67\xa5\x16\x49\x76\xce\x2a\xaf\x33\xa7\x1e\x51\xa7\x06\x6e\x75\x5d\xbb\xc9\x73\x3e\x3f\xfb\xe9\x36\x3e\x82\x44\x29\x86\x42\x74\x22\x9e\x2a\x97\x00\x58\x4e\x06\x6e\xb9\x19\xb9\xf9\x54\x71\x65\x98\xf5\x05\x36\x37\x69\xd0\x33\xee\x43\x1e\xe4\x39\x1f\x52\x06\xc6\x46\x79\xce\xc7\xc6\xa4\xbd\x19\xba\xab\x60\x48\x8a\xb3\x81\xeb\xad\x75\x7d\x62\xd0\x8f\x25\x4d\x46\x77\x22\x51\x6d\x96\x5d\x42\xcb\xaa\xce\x9a\xa0\x8b\x00\xef\x43\x02\x93\xc2\xa6\x7d\xba\x73\x79\xfe\x59\xf9\xa0\xaa\x68\x82\xa4\xc4\xef\xcb\x32\x0a\x0b\xf2\x13\x35\x26\xd2\x45\xe2\x34\x57\xac\x8d\x2d\xb3\x99\x27\xb8\x62\x56\x0f\xad\xc3\x77\xd6\xe6\xc1\x97\xf7\x5b\xe4\x24\x67\xa5\x5e\x5b\xe5\x1a\xcd\xf7\xd9\xb1\xb3\x53\x72\x9a\x73\xa4\x5e\xb0\xd6\x0e\x48\x66\x8f\xa4\x8b\x6e\xbb\x81\x5f\xa5\x69\x49\x10\x45\x92\x9d\x33\xeb\x05\xf3\xbc\x69\xaf\x1c\x90\xd5\x1a\x39\xc9\x39\x95\x33\x6b\x7e\xd1\xfa\x33\xd1\xff\xe9\x68\x3f\x15\xbe\x16\x80\x87\x6c\xef\xda\x9b\x19\xaa\x93\x1d\xd0\x77\xa8\xf5\xb2\x7d\x0d\x9b\x9a\xdf\x2a\x65\x82\xe8\xa5\xdd\x16\xc5\xce\x3e\x25\x67\x75\x6b\xe1\x83\x55\xf8\xc3\x39\xdd\xa5\x0b\xa3\xb9\x66\x56\x17\xc9\xbb\x8a\x59\x4d\x98\xd5\x22\xd9\x9c\x27\xb9\xb4\xbd\x9e\x1c\x46\xa2\x24\xd0\x5a\xbb\xb4\x66\xeb\x35\xba\xbc\xaf\x55\x8e\x8f\x47\xc2\x13\x13\xd6\xd9\xb1\x5d\x5f\x72\x76\x4a\xee\xa9\xd3\x9c\x33\x3f\xa7\x3a\xac\x23\x28\x8a\x04\xad\x97\x75\xdc\xcd\x4a\xff\x6a\xca\x65\x9d\x1d\x93\xf4\xb2\xb5\xb0\xed\x1e\x50\x38\x97\xef\xa2\x91\x1d\x1b\x19\x0a\xf6\x64\xba\x43\xc9\xfe\x23\x41\x22\xeb\xb5\x2f\x8a\xcb\xdc\xc2\xa1\x6e\x75\x6c\x1a\x8b\x8a\x82\x86\xba\x4e\x6d\x9c\x92\xd5\xa3\x6f\x72\xea\x6a\xa5\x79\xfe\x81\x1c\xe7\x69\xc1\xb5\x66\x7a\x69\x1f\xa8\xda\x94\xa4\x84\x15\x14\x8f\xf7\x2a\xe8\x8b\xe3\xb6\x43\x59\xbb\xed\x9a\xcd\x32\x59\xa9\xb5\xce\x23\x61\xb7\x5d\xb2\x7a\x64\xaf\x27\xcd\xea\xe7\xbe\xfe\x79\x2f\x6b\xe9\xeb\xe1\x15\xd0\xb6\x87\x57\x40\x5b\x66\xfe\x15\x00\x00\xff\xff\xcc\x3f\x1f\xb1\x44\x0a\x00\x00")

func resources_language_ja_jp_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_ja_jp_yml,
		"resources/language/ja-JP.yml",
	)
}

var _resources_language_zh_cn_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xdf\x4f\x1a\x59\x18\x7d\x9f\x64\xfe\x07\x02\x69\xb2\x7d\x10\x76\x5f\x79\x68\xd2\x98\x76\xdb\x5d\xed\x36\x5a\xd3\x07\xeb\xc3\xc8\x5c\x87\xbb\x0e\x33\x04\xc6\xac\xda\x34\xa1\x8d\x0a\x54\x50\x8c\xd4\xa2\x52\x15\x15\xc3\xd6\x38\xe3\x8a\x5b\x46\x40\xf8\x67\xee\xbd\x33\x3c\xf9\x2f\x6c\xee\x5c\x7e\xf8\x03\xb3\xbb\xe5\x91\x3b\xe7\x9c\xef\x9c\xef\xbb\xdf\xf5\xd8\xc6\x89\x5d\x8a\xe1\xca\x19\xd9\x3e\x27\xd9\x0b\x64\x56\xe7\x83\x03\x83\x2f\x78\x6e\x48\x50\xa4\x19\x41\x02\xc3\xaa\x08\xa7\x20\x10\x47\x67\x02\x01\x10\x8d\x4e\xcd\xc8\xf2\x9c\xdf\xe5\xbe\x8b\x7b\xfb\xe0\xc7\x77\x6e\x9e\xf3\x38\x78\x76\x8c\xcc\x34\x3e\xc9\xe1\x7c\xe9\x36\x5d\x40\xd0\xa0\xaa\x3c\x15\xa0\x0c\x44\xbf\xcb\x4d\xa1\xb7\x10\x6e\x9e\xe3\xb9\x61\x01\x2a\x4f\x22\x11\x35\xf2\x0a\x86\xa3\x7e\x97\x9b\xa4\x92\xa8\x56\x23\x0b\xab\xad\xac\xde\x8a\xc5\x70\xbc\xea\xf5\x7a\xbd\x6e\x9e\x1b\x53\x84\x49\x19\x3c\x0e\x87\xe5\xb9\x51\x10\x8d\x42\x55\xa1\x5f\x7f\xde\x23\xe5\x4f\x38\xb3\x36\x0c\x23\x02\xb4\xb2\x65\xdb\xa8\x90\x8d\x53\x6b\x6b\xa1\xfd\xcd\x55\x3d\x45\xff\x3a\x88\x91\xdd\xa2\xad\x37\xac\x4b\xdd\xcd\x73\x83\xaa\x32\x05\xa5\xa7\x50\x06\x4f\x66\x03\x20\xac\x31\xae\xd6\x62\xda\xba\xd4\xc9\x46\x1c\xd5\xbe\xe1\xfa\x07\x6c\x9a\xf4\x53\x41\x51\x54\x6d\x50\x55\x14\x10\xd0\x1c\x91\xae\x2a\x39\x39\xb0\x0a\x7a\x6b\xbd\x41\x56\x8a\x76\xbc\xec\x1c\xf6\x95\x1b\x99\x51\x7e\xfb\x95\xc2\xf2\x55\xbc\x59\x42\xd5\xea\x6b\x30\xf9\x4c\x55\xa7\xc9\x4a\x91\x64\xbf\xe1\xca\x19\xae\xc7\x70\xc6\xa0\xd8\x66\xc6\x2e\xa4\x50\x75\x85\xa6\x65\x1d\x1b\x78\xf5\xc0\xcd\x73\x2f\x66\x44\x09\x50\x7c\xa2\x8c\xcc\x18\x49\x94\x9d\xe0\x3c\xac\x0a\x5b\x6f\xb6\x3e\xeb\x41\x4d\x0b\x47\xfd\x3e\xdf\x7c\xd0\x1b\x52\x81\x04\x23\xb2\x57\x8d\x48\xde\x40\xdb\xbf\xfd\x3e\x6b\x95\x6b\x96\x5e\xb0\x32\x4b\x78\x2d\xc7\x73\xaf\xe1\x34\x1c\x82\xca\xb4\x93\x7c\xd7\x11\xe3\xa2\xda\x7d\x61\x8e\xec\x33\x20\x87\x5f\x81\x59\xcd\xef\x72\xa3\xcb\xa6\x95\x2d\xd9\xc6\x39\xc9\xad\xd8\x46\x05\x27\xd3\xb8\x11\x73\x75\x4a\x89\x06\xa1\xaa\x4c\xaa\x9a\x77\x76\x6e\xde\x37\xa8\x86\x42\x82\x22\xfa\x5c\x64\xb7\x68\xe5\x97\x99\x01\x9c\x2f\x8d\xdf\x5b\xf8\x04\x32\x4f\x48\xb2\x41\x87\x25\x71\x3a\x4e\xa7\x24\x2c\x48\x60\x02\xaf\x1f\xdd\xc8\xb8\xb1\x8e\x17\x8b\x24\x67\xe0\xcc\x11\xeb\x07\xcf\xfd\x0c\x34\x6a\xef\xb9\x32\xa5\x76\xec\x51\x25\x6a\xeb\x26\xe9\xdb\x07\x3f\xbd\xfb\x77\xc2\x76\xd8\x67\x05\x92\x4f\x92\x64\x03\x27\x4e\x5b\x85\xbf\x5b\x5f\xf6\xaf\xea\x29\x74\xb9\x44\x72\x06\xfb\x13\x55\x97\x50\xad\x88\xcc\x65\xab\xb6\x4e\x76\xf2\x3c\xe7\xe9\x15\xcd\x73\x1e\xdb\xa8\xb0\xb8\x5c\x21\xc9\xcf\x08\xc8\x5e\xbc\xb5\x9f\x73\xb5\xe2\x69\xb2\x71\x4a\xa5\x8d\x7d\xd6\x18\x5a\xf9\x28\x10\x22\x81\x20\xed\xcc\xff\x14\x7e\xa3\xb0\x9b\xd6\x91\xa3\x26\xef\x17\x64\xe6\xee\x6d\x82\xaf\x63\x81\xe7\x3c\x3f\xb4\xe2\x69\xac\x6f\xe1\xcc\x9a\x63\xec\x25\x35\x36\xf0\xa8\x67\xf2\x21\xcf\x79\xbc\xce\xaf\xe7\x62\x04\x88\x30\x02\x02\x74\x58\xde\x28\xd7\x08\x9c\x5e\x0c\x3c\x62\x1d\x78\xf8\x46\x61\x65\x58\xdb\x3a\x9d\xa1\x55\xc3\x99\x2a\xba\x2a\x48\x3e\xe9\xe7\x39\x0f\x50\x06\xc6\x46\x79\xce\xf3\xbb\x30\xf0\xcb\xcb\xce\xfa\xe9\xed\x9b\x21\x18\xa5\x0a\xfd\xe1\x2c\x0f\x47\xe0\x15\xd4\x64\xf0\x24\x14\xd6\xe8\x72\x63\x61\x20\xb3\x6a\xfd\x59\xbd\xaa\xa7\xda\x57\xba\x17\xca\xa0\xaa\x68\x02\x54\xa2\xcf\x65\x19\x48\x82\xfc\x5a\x8d\x88\x74\x3d\xd9\xcd\x2c\xde\xde\x41\xcd\x02\x79\x6f\x20\xf3\x84\x2d\xb2\xd6\x97\x1d\xba\x85\x96\x16\xb1\x7e\x71\x55\x4f\xe1\xca\x99\xbd\x7f\x6c\x37\xe3\xa4\x76\x88\x37\x4b\x64\xf9\x88\x24\xbe\x32\x8b\xbe\x3f\xe0\x34\x14\x44\x91\xa4\xe2\xa8\x76\xc8\x5a\x44\x36\x2e\xe8\xdd\xfb\x6f\x17\xc8\xd3\x26\x68\x5f\x24\x5a\xa7\x73\x40\xaf\x65\x7b\xcb\x7e\x37\x37\xed\xc6\xf5\x0b\x4a\xbb\xf8\x58\x14\xbb\x2b\x9c\x54\x6a\xf8\xe3\x1e\x3e\xfc\xcb\x3e\x2f\x3a\xcb\x6a\x13\x99\x69\x92\x33\x90\x19\x43\xe6\x57\x3a\xa5\x9f\x12\xd6\xd6\xc2\x30\x10\xa1\x40\xb1\xd6\xf1\xa6\xf5\xe1\x82\xbe\x17\xb7\x90\xe3\xe3\x21\x69\x62\x02\x57\xce\xac\xda\xaa\xbd\x7f\xcc\x4e\xed\x66\x1c\x55\x97\xba\xaa\x23\x20\x0c\x04\xed\xae\xea\x38\x1b\x9e\xfe\x68\xaa\x45\xdf\xab\x44\x06\x7f\xdc\x65\x07\x94\x8e\xe9\x5d\xd5\x53\x63\x23\x43\xfe\x3b\x43\xde\x95\x74\x9e\x3f\x20\x3a\x5e\xfb\xb2\x30\xe5\x36\x0f\x4d\xab\x1b\xd3\x58\x58\x14\x34\xd0\x4b\x6a\xfb\x9c\x6c\x9c\x7e\x57\x52\x37\x91\xe8\x72\xaf\xbd\x00\x6e\x99\xb9\x2b\xfb\x42\xd5\x82\x50\x91\x14\x10\x8d\xde\xad\xa0\x2f\x0f\xb3\x43\x55\x7b\x76\x51\x53\x27\xd9\x8b\xf6\x79\x48\x62\x76\xd9\x8b\x8a\xcc\x6a\xdf\xfc\xdc\xd7\x6b\xe9\x9b\xe1\x0d\xd2\x4e\x86\x37\x48\xdb\x61\xfe\x13\x00\x00\xff\xff\xc3\xcb\x18\x2d\xab\x08\x00\x00")

func resources_language_zh_cn_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_zh_cn_yml,
		"resources/language/zh-CN.yml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"resources/language/en-US.yml": resources_language_en_us_yml,
	"resources/language/ja-JP.yml": resources_language_ja_jp_yml,
	"resources/language/zh-CN.yml": resources_language_zh_cn_yml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources/language/en-US.yml": &_bintree_t{resources_language_en_us_yml, map[string]*_bintree_t{
	}},
	"resources/language/ja-JP.yml": &_bintree_t{resources_language_ja_jp_yml, map[string]*_bintree_t{
	}},
	"resources/language/zh-CN.yml": &_bintree_t{resources_language_zh_cn_yml, map[string]*_bintree_t{
	}},
}}
