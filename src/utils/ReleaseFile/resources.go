package ReleaseFile

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _resources_language_en_us_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x5f\x8b\x14\xc7\x17\x7d\x6f\xe8\xef\x70\xe9\x41\x7e\x3f\xc1\x9d\x49\x5e\x9b\x20\xc8\xa0\xd1\x64\xd7\xc8\xee\x8a\x88\x2e\x58\xd3\x75\xa7\xa7\x32\x35\x55\x9d\xaa\x6a\x67\x5b\x11\x4c\x48\xfc\xbb\x92\x3c\x68\xd0\xc4\x68\x22\x1a\x44\x31\x12\x0d\xec\x6e\x76\x93\xf9\x32\xd3\x3d\x93\xa7\xfd\x0a\xa1\xaa\xe7\xcf\xba\xee\x9a\x40\xe6\x65\xa0\xab\xee\x39\xe7\x9e\x7b\xaa\xaa\x32\x4b\x44\x9c\x92\x18\xa1\x45\x34\x34\x10\x05\x44\x2d\x22\x62\xa4\x60\x24\xa0\x98\x39\xb9\xe0\x7b\xe3\x3d\x73\x92\xb2\x26\x43\xba\x90\x46\x11\x6a\xdd\x4c\x39\xcf\x42\x08\xde\x09\x71\x71\xdf\x7b\x97\x02\xdf\xab\x38\x28\xa0\x12\x35\x08\x69\x10\x70\x99\x69\xb3\x13\x3a\x22\x86\x49\x71\x84\x30\x8e\x34\x84\xc0\xd6\x4e\x4a\xca\x8a\xc0\xf7\x7c\xaf\xb2\xd8\x62\x1a\xf8\x98\xb6\xc9\x38\x02\xd3\x90\x28\x79\x9e\x51\xa4\xd0\xc8\xe0\xf4\xe9\x45\xf8\xa0\x65\x4c\xa2\xc3\x5a\xad\xdb\xed\x56\xb3\xcc\x54\x23\x29\x79\xed\xa0\xef\xcd\x11\x26\x0e\x2b\x25\xd5\x22\x4b\x74\x08\xc1\x09\x85\x5a\x03\x11\x19\xb4\x31\x73\x7d\x2f\x33\x53\xad\x56\x03\xdf\x3b\x29\x48\x83\xe3\xa1\x24\xe1\xd9\x02\x6a\xcd\xa4\x08\x21\x28\x3f\xda\x8d\xc4\x2e\x40\x53\x2a\x20\x20\xb0\x0b\xa3\x3d\x76\x69\x8e\x29\xc2\x0e\x40\xc2\x91\x68\x84\xa8\x85\x51\x1b\x4c\x0b\x61\x01\x8d\x61\x22\xd6\x81\xef\xd5\xa5\x68\xb2\xf8\x08\xe3\x78\x78\x39\xc2\xc4\x94\xe8\x4e\x19\x30\x01\x91\x5b\x4e\x9b\xce\x14\xbb\x9d\x08\x21\x4d\x5d\x0a\x81\x91\x71\xf0\x6f\x68\xe1\x4c\xb4\x27\xc4\x10\x49\xa5\x30\x32\x3c\xdb\x21\x61\x1b\xfd\x7c\x2a\x3e\xf9\x38\x84\x60\x5e\x36\xa4\x81\x53\xd8\x38\x2a\x65\x1b\x14\x8e\xa4\x00\x3a\x68\xba\xb5\xb9\xa2\x52\x21\x98\x88\x41\x0a\x48\xa4\x32\xe3\xa1\x1e\x4f\x69\x8c\x21\x04\xee\xbf\x9c\xcc\x36\x6b\x5c\x46\x60\x3c\x83\x0b\xad\x6a\x47\x62\xcc\x14\xaf\x4a\x15\x57\x23\x31\xd5\x25\x85\x21\x91\x71\xe6\x10\xda\x61\x82\x69\xa3\x88\x91\xca\xf7\x4e\xb1\x36\x9b\x65\xa2\xed\x2c\x79\xd3\x78\x87\x6e\x75\xfc\x33\x0e\x38\x69\x47\x91\x27\x8b\xb8\x6c\xec\xbc\xcb\x82\x58\x5a\xa4\xb1\x40\xdd\x62\x52\x34\xa4\xa9\x2e\x67\x17\x6a\xe3\x6c\xe9\x9a\xcb\x6d\xad\x2e\x3b\x1d\x22\x68\xcd\x8d\x9a\x09\x6d\x54\x1a\x59\x8f\x74\xd9\x75\x9d\x88\xff\x19\x68\x32\x41\xe1\x8c\x0d\x57\x42\x62\x5c\xb2\x23\x3c\xb3\x67\xfb\x4b\x6f\x45\x83\x94\xd2\x99\x48\x52\x63\xe3\x3c\x9a\xa0\xef\x7d\x88\xc6\x1a\x71\x4c\x34\xe5\xd8\x88\xed\x84\x17\xf7\xbd\x7f\xa9\x24\xb3\x76\xfc\x6b\xdc\xf1\x49\x42\xb0\x6a\x21\x92\x29\xa7\xee\x9c\x35\x10\x9a\x32\x15\xf4\x00\x34\xd2\xb2\xb4\x29\x39\x97\x5d\x1b\x00\x85\x3a\xe5\x46\x43\x17\xd5\x68\x97\xef\x55\xa6\x2d\xfb\x5e\x65\xe4\x6d\xaa\x11\x82\x4e\x1c\x9e\xb0\xd8\x86\x19\x8e\x81\x35\xfb\xb3\x14\x55\x06\x24\x26\x4c\x94\xd3\xb5\x4d\x2d\x20\x51\x51\x2b\x84\xe0\x3f\x8b\x39\x2b\xac\x05\xdb\x24\x9c\xb3\xe6\x6c\x13\x71\x6e\x87\x88\xd2\x84\x3d\x87\x54\x1b\x77\xe6\x7b\x95\xff\x2b\xa4\xcc\x1a\xe7\xda\xb5\x90\x4b\x33\x07\xa7\xad\xef\xf7\xbd\x4a\xd5\xfd\xa6\x8d\xcd\x8f\x2a\x42\x08\xce\x8a\x69\xbd\x1b\xd3\xcc\xc1\x72\x70\xfb\xcf\x8e\x44\xd4\x53\xa5\x50\x18\x9e\x01\x39\x4f\x18\x77\x41\x9f\xc4\x30\x1c\xdf\xa0\xbe\x57\xf9\x94\xcc\x7c\x74\xc2\xf7\x2a\x17\x5a\x33\xf5\xe3\xd3\x1b\x74\x96\x69\x4b\xf4\x2e\x98\xb0\xf4\xc7\xf1\x2d\x5a\x3b\x0e\x77\x12\x93\x8d\x8c\x77\xfe\xd8\x7c\xa0\xfd\x08\x44\x50\x88\xdc\x85\x63\x67\x60\x2d\x63\x48\x5d\x65\xdd\x9e\x33\x26\xf4\x31\xce\x31\x26\xfc\x94\x54\xd4\x5e\xa2\xc3\xde\xed\xfc\xfb\x07\xfd\xde\x4f\xc5\xe7\x2f\xfb\x6b\x2f\xf2\x17\x77\xf3\xfb\x4f\xff\xfa\xe1\x41\xf1\xfa\x4e\x7e\xe5\xab\xfc\x97\xf5\xad\xcd\x95\x7c\xf5\xd5\xf0\xd1\xf3\x61\xef\x6a\xb1\xf1\x38\xbf\xf7\xb4\xb8\xf9\x73\x71\xed\x99\x03\xb5\x96\x1d\xa2\xd4\x1e\xd2\x10\x82\x5a\x97\xb5\x19\xa1\xb4\x58\xb9\xda\xdf\x78\xdc\xff\xa3\x37\xb8\xfd\xb4\xf8\x76\xbd\x78\x7d\x67\xf8\x72\x35\xbf\x7e\x2b\xff\xf3\xf2\xee\xe7\x76\x7c\x4e\x2b\x23\x00\x28\x1e\x3e\x19\xdc\xbf\x19\x4c\x08\x26\x6f\x4b\xb1\xba\x91\xdf\xf8\x31\x7f\xfc\xeb\xf0\xb7\x27\x5b\x9b\x2b\xc3\xde\xbd\xfe\xda\xad\xe2\xee\xcb\xfe\xda\xe5\xfe\xda\xb3\xe2\xfe\xf5\xe2\xce\xb5\xc1\x77\x5f\xce\x21\x65\xc4\xd6\x0e\x9e\xdf\x1b\x7c\xb1\x6e\x5f\xb2\x1d\x95\x67\x3a\xf1\x52\xbe\xfa\x6a\xb0\xf1\xf5\xf0\xd1\xf3\x72\x6d\xd8\xbb\xda\xff\xfd\xca\x84\x73\x1e\x13\x24\xe6\x6d\xce\x32\x08\xbb\xd6\x5a\x9e\x7c\xf5\x55\x71\xed\x9b\xfc\xc6\xc3\x72\xc1\x82\x59\xae\xad\xcd\x95\x93\xf3\xb3\xe1\x9e\x99\x9d\xd0\xba\x57\x1a\xa9\xeb\x76\x37\x2c\xc7\x3e\x42\xb3\x51\x0c\x7c\xef\xef\x00\x00\x00\xff\xff\x86\x81\x6f\x81\x0e\x08\x00\x00")

func resources_language_en_us_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_en_us_yml,
		"resources/language/en-US.yml",
	)
}

var _resources_language_ja_jp_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xd1\x4f\x13\xd9\x17\x7e\x9f\x64\xfe\x87\x66\x1a\x93\x9f\x0f\xb4\xbf\x7d\xed\x83\x89\x21\xba\xba\x0b\x6a\x40\xe3\x03\xfa\x30\x76\x2e\x65\x96\x61\xa6\x69\x87\xac\x68\x4c\x7a\x67\x6a\x29\x74\x48\x59\x63\x55\xa0\x52\x8b\x05\xba\x6d\xda\xba\xa2\xa1\xb5\x75\xfb\xc7\x9c\xb9\x33\xe3\x13\xff\xc2\xe6\xde\x69\x0b\x0b\xb8\x9b\xac\xbb\x3c\x10\x92\x3b\xe7\xfb\xbe\xfb\x9d\xef\xdc\x43\xd0\xab\xa6\xbc\xda\x36\xe0\xd6\xa3\xb9\xb1\xf1\x1b\x80\xeb\xa4\xb2\xe2\x6c\x7d\x00\xfc\x12\x70\x89\xe7\x26\x44\x35\xb6\x28\xc6\xd0\xa4\x26\xc9\xb3\x32\x92\xa6\x17\xa3\x51\x94\x4c\xce\x2e\x2a\xca\x52\x24\x20\x8c\xaa\x1f\x5f\xf8\xff\x93\x53\xc5\x02\xcf\x05\x19\xe8\xe8\x23\xc0\x35\xc0\xe9\xd3\xa0\x51\x51\x97\x35\xf5\xaa\x28\x2b\x48\x8a\x04\x04\x8a\x74\xaa\x42\xe0\x39\x9e\x9b\x14\x65\xf5\x4a\x22\xa1\x25\x6e\xcb\xf1\x64\x24\x20\x00\x4e\x03\xde\x04\xc3\x02\xdc\x04\xa3\x01\x66\x0f\x8c\x67\xce\x6a\x0f\xf0\x06\xe0\xaa\x93\xed\x82\x91\x0b\x85\x42\x21\x81\xe7\xee\xa8\xe2\x03\x05\x5d\x8e\xc7\x95\xa5\x69\x94\x4c\xca\x9a\x1a\x09\x08\x93\x72\x42\x94\x01\xd7\x9d\x17\xef\x98\xde\xf4\xe0\xc8\x7d\x7e\xe0\xd5\x73\x80\xf7\x01\xaf\xf9\xf4\x47\x3d\xcb\xab\x36\x48\x73\x13\x8c\x67\x60\x62\x30\xf6\xc1\x34\xc1\x68\xb1\xb2\x3d\xc0\x79\xc0\x6f\x00\x17\x7c\xa1\xe3\x9a\x3a\x2b\xc7\xae\xca\x0a\xba\xf2\x30\x8a\xe2\xba\x4f\x36\xa8\x37\x0b\x60\x94\xc1\xa8\x80\x59\x77\x0b\xef\x48\xbb\x4d\x0b\x44\x55\xd5\xf4\x71\x4d\x55\x51\x54\x67\xa2\x4e\x8a\x6b\xbc\x65\x2c\x79\x30\x6b\x60\x1e\x30\xd2\x7f\x28\x6c\x6a\x51\xbd\xf9\x23\xf5\xcd\x2c\xd2\xaf\xcc\xec\x5d\xf4\xe0\x9a\xa6\xcd\x03\x6e\x92\xfc\x4b\xbb\x5f\x06\x6c\xdd\xa4\x01\x60\xd8\x6f\x19\x40\x1a\x8c\xdc\x51\xcf\x62\xcd\x35\x5f\x53\x8b\xcd\x2c\xe0\x7d\xd2\x2c\x79\x65\xcb\x6e\x37\x04\x9e\xbb\xb1\x28\xc5\x10\x83\x5d\x05\x73\xd9\xff\xcd\xfa\x15\x9c\xd3\xf5\x78\x32\x12\x0e\x3f\x9a\x0b\x2d\x68\x28\x26\x27\x94\x90\x96\x88\x85\xa2\x2a\xe5\x30\x76\xa8\x4e\xa3\x0b\x46\xe7\xd4\x8d\xdc\x66\xd9\x5d\xcf\x78\xa9\xa7\x80\xeb\x5f\x52\x6f\xdd\x8f\xe5\xb3\xd7\xe1\xb9\xbb\xf2\xbc\x3c\x21\xab\xf3\x2c\x11\x83\xd4\x7c\x3b\x2e\x13\x7e\x0d\x29\xf1\xdb\xe8\xa1\x1e\x09\x08\xf6\xe7\x3e\xe0\xb4\xf3\xa2\x03\xb8\x15\x18\xde\x27\x39\x27\x6b\xea\x03\x4d\x0f\x3d\x5c\x7a\x14\x56\x06\x51\x4e\x86\x7f\x12\xc7\x7e\xb8\x15\x1e\xd7\x16\x16\x44\x55\x0a\x07\x00\xef\x7b\xb5\x3e\xe0\xce\x79\x14\xc1\x99\xaf\x9a\x73\x9f\x75\xa0\x35\x43\xe3\x1e\x17\x63\xe8\x3e\x60\xcb\xdb\xcb\x01\xae\x00\xfe\x05\x8c\x15\x16\xf8\x1a\xe0\x1c\xeb\x51\xe9\xa8\x67\x91\xa7\xbb\x64\x75\x0b\x70\x6b\x18\x96\x34\x3b\xfd\x15\x70\x86\xfe\xf1\x97\xb9\xe0\xb9\xef\x91\x4e\xbd\xbc\xae\xce\x6a\x43\x2f\x67\xa8\x99\x43\x1d\x8f\x2f\x7c\xf7\xe4\xbf\xd5\xe0\x3b\x02\xe6\x26\x1b\xe1\x36\x18\xcf\x8e\xb9\x4e\xb0\x00\xb6\x8e\x7a\x96\xdd\xdd\xb5\xdb\x39\xc0\x4d\xf7\xe3\xba\xb3\x5d\xfc\xf3\xc7\x25\xea\xec\xc8\x38\x9e\x0b\x06\x16\x62\x91\x63\x60\x33\xc3\x12\xbc\x4d\x7b\x03\x86\x01\x38\x63\xb7\x53\xe4\xd3\x1e\x29\xe4\x01\xa7\xc9\x7a\x16\x8c\x3c\xe0\xad\x73\xb3\x46\xfd\x99\x46\x62\x22\x3a\xc7\xb2\xfe\x2f\x68\xbd\xa7\x52\x9b\x03\xd4\xdf\x6f\xd6\xf8\x37\x03\x17\x1e\x7a\xc2\x73\xc1\xff\x91\xcc\x9a\x63\x2d\x93\xe6\x26\x73\xea\x16\x75\x6a\xec\xd2\xb1\x6b\x17\x79\x2e\x18\x62\x3f\xc7\x17\x9f\x42\x92\x9c\x40\x51\x3a\x11\xf7\xd4\x13\x00\x2c\x27\x63\x97\xfc\x8c\x5c\xbc\xa7\xfa\x32\xec\xee\x2a\x9b\x9b\x2c\x18\x39\xff\x21\x8f\xf0\x5c\x10\xa9\x63\x77\xa6\x79\x2e\xc8\xc6\x64\xb8\x19\x8e\x57\xc1\x84\x9c\x64\x03\x77\xb6\xd6\xf7\x89\x41\xdf\x96\x75\x05\x5d\x59\x88\xeb\x4b\xac\x09\x03\xab\x46\x6b\x82\x2e\x02\xbc\x0f\x29\xec\x54\x8a\xee\x87\x9d\x93\xf3\xcf\xca\xc7\x35\x55\x17\x65\x35\x79\x5d\x51\x50\x4c\x54\xee\x6a\x09\x89\x2e\x12\xaf\xff\x9c\x6c\x6d\xdb\xfd\xb2\x83\x5b\x76\xbb\x41\x1a\xaf\x48\xb1\xfa\xe5\xf5\xb6\x73\x50\x20\x99\xa7\xa4\xd9\xa1\xf9\x3e\x7c\xef\xed\xd4\xbd\xfe\xb2\xd3\xad\x90\x8d\xaa\x93\xdb\x73\xb2\x35\x06\x4a\x3d\xba\x2c\x49\xf4\xd1\x88\x04\x84\xf0\xcf\xf2\xbc\x2c\x4a\x92\x63\x2d\xdb\xdd\x8a\xfd\xb9\xef\x3e\xaf\x3a\x2f\x3a\xce\x41\xc1\x6b\x1d\x92\x95\x35\xf2\x7b\xea\xfc\x77\x64\xf8\x6e\x04\x07\x00\x01\xa7\xb4\xeb\x16\x73\xc2\x88\x60\xb4\x1f\x9d\xc3\x2e\x59\x7d\x43\x2a\xbf\x79\x1f\x76\xe9\x02\xe8\x6f\xd8\xed\x35\xe7\x55\xcb\x6e\xa7\xec\x76\xcd\x29\xae\x38\x85\xac\xbb\x99\x9e\x44\x92\x2c\xd2\x5a\xb7\xbe\xe1\x1a\x1d\xba\x8c\x4f\x55\xce\x2c\xc4\xee\x93\xc3\xf7\x6e\x37\xef\xed\xd4\xfd\x33\xaf\xbf\x6c\x7f\xca\x8c\x38\xa7\x50\x1c\x89\xfa\x59\x4e\xbf\xf1\xe7\xd6\x52\x1e\x72\xf8\xde\xc9\xae\x93\xd5\x92\x7f\x40\xc1\x28\xd7\x51\xcf\xba\x33\x35\x11\xf9\x6a\x4a\x47\xb4\xec\x7f\x0c\x24\xb1\xdb\x9e\x87\xc5\xd8\x07\x68\x34\x7a\x02\xcf\xfd\x11\x00\x00\xff\xff\x36\xbb\x84\x23\xc7\x08\x00\x00")

func resources_language_ja_jp_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_ja_jp_yml,
		"resources/language/ja-JP.yml",
	)
}

var _resources_language_zh_cn_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4f\x4f\x1b\x47\x1c\xbd\xaf\xb4\xdf\xc1\xb2\x15\xa9\x39\x60\xb7\x57\x1f\x22\x45\x88\x34\x69\x21\x8d\xf8\x23\x0e\xc0\x61\xf1\x0e\x66\xca\x7a\xd6\xb2\x17\x15\x88\x22\x39\x11\x60\x3b\xd8\x60\x84\x43\x0c\x38\x80\x01\x23\x37\x88\x5d\x8a\x69\xbc\xd8\xc6\xfe\x32\x33\xb3\xbb\x27\xbe\x42\x35\x3b\x06\x37\x04\xd4\x66\x8f\x3b\xf3\xde\xfb\xbd\xdf\xbf\xf1\xd9\xc6\xa9\x5d\x49\x90\xda\x39\xdd\xb9\xa0\xf9\x4b\x6c\xd6\x17\xa6\x7b\x7a\x5f\x8a\x42\xbf\x84\xc2\xb3\x52\x18\x0c\xa8\x32\x9c\x82\x40\x1e\x9a\x0d\x85\x40\x3c\x3e\x35\xab\x28\xf3\x41\x8f\xf7\x5b\xdc\xeb\x47\x3f\xbe\xf1\x8a\x82\xcf\xc5\xf3\x63\x6c\x66\xc9\x69\x81\x14\x2b\x77\xe9\x42\x92\x06\x55\xf4\x4c\x82\x0a\x90\x83\x1e\x2f\x83\xde\x41\x78\x45\x41\x14\x06\x24\x88\xfa\x62\x31\x35\x36\x0c\xa3\xf1\xa0\xc7\x4b\x33\x69\xdc\x68\xd0\xc5\x35\x27\xaf\x3b\x89\x04\x49\xd6\xfd\x7e\xbf\xdf\x2b\x0a\x23\x48\x9a\x54\xc0\xd3\x68\x54\x99\x1f\x02\xf1\x38\x54\x11\xbb\xfd\x71\x9f\x56\x3f\x90\xdc\xfa\x00\x8c\x49\xd0\xca\x57\x6d\xa3\x46\x37\xcf\xac\xed\xc5\xce\x9d\xeb\x66\x86\xfd\x3a\x4c\xd0\xbd\xb2\xad\xb7\xac\x2b\xdd\x2b\x0a\xbd\x2a\x9a\x82\xe1\x67\x50\x01\x7d\x73\x21\x10\xd5\x38\x97\xb3\x94\xb5\xae\x74\xba\x99\xc4\x8d\x2f\xa4\xf9\x8e\x98\x26\xbb\x2a\x21\xa4\x6a\xbd\x2a\x42\x20\xa4\xb9\x22\xb7\xaa\xf4\xf4\xd0\x2a\xe9\xce\x46\x8b\xae\x96\xed\x64\xd5\x3d\xbc\x57\x6e\x70\x16\xfd\xf6\x2b\x83\x15\xeb\x64\xab\x82\xeb\xf5\x51\x30\xf9\x5c\x55\x67\xe8\x6a\x99\xe6\xbf\x90\xda\x39\x69\x26\x48\xce\x60\xd8\x76\xce\x2e\x65\x70\x7d\x95\x65\xcb\x3a\x31\xc8\xda\xa1\x57\x14\x5e\xce\xca\x61\xc0\xf0\xa9\x2a\x36\x13\x34\x55\x75\x13\xe7\xe3\x51\xd8\x7a\xdb\xf9\xa8\x4f\x6b\x5a\x34\x1e\x0c\x04\x16\xa6\xfd\x11\x15\x84\x61\x4c\xf1\xab\xb1\xb0\x3f\xd4\xf1\x6f\xbf\xcd\x5b\xd5\x86\xa5\x97\xac\xdc\x32\x59\x2f\x88\xc2\x28\x9c\x81\xfd\x10\xcd\xb8\x99\xbf\x75\xc4\xb9\x98\xf6\xbd\x30\x57\xf6\x39\x50\xa2\xc3\x60\x4e\x0b\x7a\xbc\xf8\xaa\x6d\xe5\x2b\xb6\x71\x41\x0b\xab\xb6\x51\x23\xe9\x2c\x69\x25\x3c\x37\xa1\xc4\xa7\xa1\x8a\x26\x55\xcd\x3f\x37\xbf\x10\xe8\x55\x23\x11\x09\xc9\x01\x0f\xdd\x2b\x5b\xc5\x15\x6e\x80\x14\x2b\x63\x0f\x06\x3e\x81\xcd\x53\x9a\x6e\xb1\x66\x49\x9d\x8d\xb1\x2e\x89\x4a\x61\x30\x41\x36\x8e\xbf\xca\x71\x6b\x83\x2c\x95\x69\xc1\x20\xb9\x63\x5e\x0f\x51\xf8\x19\x68\xcc\xde\x0b\x34\xa5\xde\xd8\x63\x4a\xcc\xd6\xd7\xa4\xaf\x1f\xfd\xf4\xe6\xbf\x09\x3b\xc9\x3e\x2f\xd1\x62\x9a\xa6\x5b\x24\x75\xe6\x94\xfe\x76\x3e\x1d\x5c\x37\x33\xf8\x6a\x99\x16\x0c\xfe\x13\xd7\x97\x71\xa3\x8c\xcd\x15\xab\xb1\x41\x77\x8b\xa2\xe0\xeb\x06\x2d\x0a\x3e\xdb\xa8\xf1\x74\x79\x22\xe1\x20\x27\xa0\xfb\x49\xe7\xa0\xe0\x71\x92\x59\xba\x79\xc6\xa4\x8d\x03\x5e\x18\x16\xf9\x10\x90\x62\xa1\x69\x56\x99\xef\x14\x1e\x47\x7c\xd2\x6e\xe4\x98\xc9\x87\x05\xb9\xb9\x07\x8b\x10\xb8\xb1\x20\x0a\xbe\x1f\x9c\x64\x96\xe8\xdb\x24\xb7\xee\x1a\x7b\xc5\x8c\xf5\x3c\xe9\x9a\x7c\x2c\x0a\x3e\xbf\xfb\x75\x5d\x0c\x02\x19\xc6\x40\x88\x35\xcb\x38\xfa\x17\x81\x5b\x8b\x9e\x27\xbc\x02\x8f\xc7\x11\x0f\xc3\xda\xd1\x59\x0f\xad\x19\x6e\x57\xb1\x55\x41\x8b\xe9\xa0\x28\xf8\x00\xea\x19\x19\x12\x05\xdf\xef\x52\xcf\x2f\xaf\x6e\xd6\x4f\x77\xdf\xf4\xc3\x38\x53\xb8\x1f\xce\xf3\xe1\x0a\x0c\x43\x4d\x01\x7d\x91\xa8\xc6\x96\x1b\x4f\x06\x36\xeb\xd6\x9f\xf5\xeb\x66\xa6\x33\xd2\xdd\xa4\xf4\xaa\x48\x93\x20\x8a\xbf\x50\x14\x10\x96\x94\x51\x35\x26\xb3\xf5\x64\xb7\xf3\x64\x67\x17\xb7\x4b\xf4\xad\x81\xcd\x53\xbe\xc8\x9c\x4f\xbb\x6c\x0b\x2d\x2f\x11\xfd\xf2\xba\x99\x21\xb5\x73\xfb\xe0\xc4\x6e\x27\x69\xe3\x88\x6c\x55\xe8\xca\x31\x4d\x7d\x76\x49\x59\x5e\x9e\xca\x32\x9b\xa1\xa0\xc7\x1b\xf8\x03\xce\x40\x49\x96\x69\x26\x89\x1b\x47\xbc\x5e\x74\xf3\x92\x0d\xe2\xff\x9b\x26\x5f\x87\xa0\x3b\x55\x1d\x81\xdb\xad\x4b\x6b\x0d\xf2\x7e\x9f\x1c\xfd\x65\x5f\x94\xdd\xfd\xb2\x85\xcd\x2c\x2d\x18\xd8\x4c\x60\xf3\x33\x6b\xac\x0f\x29\x6b\x7b\x71\x00\xc8\x50\x62\x58\xeb\x64\xcb\x7a\x77\xc9\x56\xfc\x1d\xe4\x58\x24\x3c\x41\x6a\xe7\x56\x63\xcd\x3e\x38\xe1\x67\x76\x3b\x89\xeb\xcb\xb7\x9a\x83\x20\x0a\x24\xed\x5b\x4d\x5e\xec\x7b\xb1\x4c\x87\x3d\x2f\xa9\x1c\x79\xbf\xc7\x0f\x18\x19\xd3\xba\x6e\x66\x46\x06\xfb\x83\x0f\x76\xe6\xad\xac\xfb\x66\x01\xd9\x75\x7b\x1f\x97\xab\xde\x61\x63\xed\xe6\x15\x85\x7f\x02\x00\x00\xff\xff\x32\xeb\xba\xa0\x11\x07\x00\x00")

func resources_language_zh_cn_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_zh_cn_yml,
		"resources/language/zh-CN.yml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"resources/language/en-US.yml": resources_language_en_us_yml,
	"resources/language/ja-JP.yml": resources_language_ja_jp_yml,
	"resources/language/zh-CN.yml": resources_language_zh_cn_yml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources/language/en-US.yml": &_bintree_t{resources_language_en_us_yml, map[string]*_bintree_t{
	}},
	"resources/language/ja-JP.yml": &_bintree_t{resources_language_ja_jp_yml, map[string]*_bintree_t{
	}},
	"resources/language/zh-CN.yml": &_bintree_t{resources_language_zh_cn_yml, map[string]*_bintree_t{
	}},
}}
