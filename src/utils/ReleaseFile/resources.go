package ReleaseFile

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _resources_language_en_us_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xdb\x4f\x14\x49\x17\x7f\xef\xa4\xff\x87\x93\x9e\x98\xef\x33\x91\x19\x50\x9f\x3a\x5f\x4c\xcc\xa8\x9f\xee\x02\xab\x5c\x62\x0c\x90\x58\xd3\x7d\xa6\xa7\x96\x9e\xaa\xde\xae\x6a\x61\x34\x26\xec\xc6\x15\x50\x8c\xfb\xa0\x46\xd4\xf5\x16\xdc\x10\x8d\xa2\x68\x02\x08\x2e\xff\xcc\x74\x33\x3e\xf1\x2f\x6c\xaa\x7a\xae\x30\xba\x66\x97\x17\x92\xa9\x3a\xbf\xdb\x39\x75\x3a\xd3\x4f\x98\x17\x11\x0f\xa1\x44\x04\x14\x10\x19\x38\x25\xc2\x3c\x74\x41\x72\x40\xd6\x33\x3a\x6c\x1a\x8d\x3b\x03\xdc\xa5\x45\x8a\xee\x70\xe4\x38\x28\x44\x31\xf2\xfd\x8a\x0d\xd6\x57\x21\xae\x1c\xe8\xbd\x6a\x99\x46\x46\x43\x81\xcb\x51\x00\xe3\x12\x01\xa7\xa9\x90\x7b\xa1\x1d\x22\x29\x67\xa7\x08\xf5\xd1\xb5\xc1\x52\xb5\xcd\x92\xb4\xc2\x32\x0d\xd3\xc8\x8c\x94\xa8\x00\xbf\x41\x5b\xa4\x3e\x02\x15\x10\x84\xfc\x12\x75\xd1\x85\x42\x05\x2e\x5c\x18\x81\xff\x95\xa4\x0c\x84\x9d\xcb\x4d\x4d\x4d\x65\x2b\x15\x99\x75\x38\xf7\x73\xc7\x4c\x63\x80\x50\x76\x32\x0c\x79\x38\x42\x03\x61\x83\x75\x36\x44\x21\x80\xb0\x0a\x4c\x62\x45\xfb\x9e\xa6\x32\x9b\xcd\x5a\xa6\x31\xca\x48\xc1\xc7\xe3\x41\xe0\x57\x86\x51\x08\xca\x99\x0d\x56\xfa\xa3\xba\x48\xd4\x01\x14\x79\x08\x04\x18\x4e\x41\xfd\x8e\x3a\x1a\xa0\x21\xa1\x87\x20\xf0\x91\x08\x04\xa7\x84\xce\x24\xc8\x12\xc2\x30\x4a\x49\x99\x27\x2c\xd3\xc8\x73\x56\xa4\xde\x29\xea\xe3\xc9\x69\x07\x03\x99\xa2\x6b\x65\x40\x19\x38\xfa\x38\x2a\xea\x50\xd4\x75\xc2\x18\x97\x79\xce\x18\x3a\x52\xc3\x77\x68\xf1\x29\x9b\x6c\x12\x83\xc3\xc3\x10\x1d\xe9\x57\xf6\x48\x68\xa3\x1f\x8a\xd8\x0f\xdf\xdb\x60\x0d\xf1\x02\x97\x70\x1e\x0b\xa7\x39\x9f\x84\x10\xeb\x52\x00\x35\xb4\xbb\xbb\xb5\x10\x46\x8c\x51\xe6\x01\x67\x10\xf0\x50\x36\x9a\x3a\x18\xb9\x1e\xda\x60\xe9\xff\x69\x67\xda\xa2\xd1\x33\x02\x8d\x1e\x5c\x2e\x65\xcb\x1c\x3d\x1a\xfa\x59\x1e\x7a\x59\x87\xb5\x74\x71\x26\x89\x23\x75\x38\xc4\x2d\x53\x46\x85\x0c\x89\xe4\xa1\x69\x9c\xa7\x93\xb4\x9f\xb2\x49\x1d\x49\x67\xf0\x1a\x5d\xe9\xf8\x7b\x1c\xd0\xd2\x4e\xa3\x1f\x8c\xe0\xb4\x54\xfd\x4e\x0b\x3c\xae\x90\x1a\x02\x45\x89\x72\x56\xe0\x32\x3b\x5d\xb9\x9c\x6b\xcc\x96\xc8\xe9\xb9\xcd\xe5\x79\xb9\x4c\x98\x9b\xd3\xad\xa6\x4c\xc8\x30\x72\x54\x46\x22\x75\x9d\x27\xec\x3f\x12\x8a\x94\xb9\x30\xa6\x86\x2b\x20\x1e\x4e\xa8\x16\x8e\x7d\xd1\xfe\xc4\xbe\xd1\x20\xa9\x74\xca\x82\x48\xaa\x71\xae\x77\xd0\x34\xfe\x8f\x52\x05\x71\x86\x15\x79\x23\x88\x76\xc2\x2b\x07\xfa\xae\xa6\x64\x2a\x8e\x6f\xc6\x6d\xbc\x24\x04\xa5\x16\x1c\x1e\xf9\xae\x7e\x67\x05\x84\x22\x8f\x98\x7b\x08\x0a\x51\x5a\x5a\xe4\xbe\xcf\xa7\xd4\x00\x84\x28\x22\x5f\x0a\x98\xc2\xb0\x7e\xcb\x34\x32\x2d\xcb\xa6\x91\xa9\x67\x1b\x09\x04\xab\xec\xd9\x67\x15\xb6\xa4\xd2\x47\x4b\x85\xfd\x53\x84\x61\x05\x88\x47\x28\x4b\xbb\xab\x4c\x0d\x23\x09\x9d\x92\x0d\xd6\xbf\x16\x33\xce\x54\x04\x6d\x12\x2e\xaa\x70\xda\x44\x5c\xdc\x23\x22\x0d\xe1\x8b\x4d\xca\x35\x9c\x99\x46\xe6\xbf\x21\xba\x54\x05\xa7\xed\x2a\xc8\x89\x9e\x63\x2d\xeb\x07\x4d\x23\x93\xd5\x7f\x2d\x63\x43\xf5\x0a\x1b\xac\x71\xd6\xaa\xd7\x6d\xea\x39\x96\x36\xee\xe0\x78\x5d\x44\x3e\x0a\x43\x64\xd2\xaf\x00\xb9\x44\xa8\xaf\x07\xbd\x39\x86\x76\x63\x83\x9a\x46\xe6\x47\xd2\xf3\xdd\x59\xd3\xc8\x5c\x2e\xf5\xe4\x07\x5b\x1b\xb4\x9f\x0a\x45\xf4\x35\x18\x3b\xcd\x47\xf3\x8d\xa8\x38\x4e\x96\x03\x59\xa9\x07\xaf\xf3\x51\xf3\x81\xea\x47\x20\xcc\x05\x47\x2f\x1c\xd5\x03\x15\x19\x45\x57\x57\xe6\xd5\x3b\xa3\x4c\x9c\xf1\x7d\xf4\x88\x7f\x9e\x87\xae\x5a\xa2\xb5\xed\x3b\xf1\xc3\xc7\xd5\xed\x67\xc9\xcf\x2b\xd5\xf5\xd7\xf1\xeb\xfb\xf1\xa3\xe5\xcf\xbf\x3f\x4e\xde\xdf\x8d\xaf\xff\x1a\xbf\xd9\xd8\xdd\x5a\x88\xd7\x56\x6b\xcf\x5f\xd5\xb6\x67\x93\xcd\xa5\x78\x71\x39\xb9\xf9\x47\x32\xf7\x32\xb5\x9f\x9b\xa2\x93\x94\xb8\x6e\xb2\x30\x5b\xdd\x5c\xaa\x7e\xda\xde\xb9\xb3\x9c\xdc\xdb\x48\xde\xdf\xad\xad\xac\xc5\xf3\xb7\xe2\x3f\x67\xba\x3f\xd5\xc6\xd3\xcc\xd4\x01\x20\x79\xf2\x62\xe7\xd1\x4d\xa5\x53\x1f\xa8\x77\x5f\xff\x96\x7c\x0d\x5b\x35\xa3\x5e\xaa\x05\xa9\x1e\x1e\x77\xdd\xe6\xb7\x28\x59\xdb\x8c\x6f\x3c\x8d\x97\xde\xd5\x3e\xbc\xd8\xdd\x5a\xa8\x6d\x2f\x56\xd7\x6f\x25\xf7\x57\xaa\xeb\x33\xd5\xf5\x97\xc9\xa3\xf9\xe4\xee\xdc\xce\x83\x6b\x03\xe8\x52\xa2\x6a\x77\x5e\x2d\xee\xfc\xb2\xa1\xbe\x7c\x7b\x2a\xc7\xc6\xca\xde\xc4\x44\xbc\xb6\xba\xb3\x79\xbb\xf6\xfc\x55\x7a\x5a\xdb\x9e\xad\x7e\xbc\xde\x64\x1d\xc2\x00\x89\xdc\xcf\x3a\x96\xce\x4e\xf7\x6a\xc5\x15\xaf\xad\x26\x73\xbf\xc5\x37\x9e\xa4\x07\x0a\x2e\xe5\xdb\xdd\x5a\x18\x1d\xea\xb7\xf7\x4d\x78\x93\x52\x7f\xd3\xd1\xd5\x5e\xbb\xa2\xa4\xcc\x75\x1c\x95\x56\x33\xa6\xd1\xc0\x25\x12\x5b\x49\x3d\xfc\x90\xdc\x7b\xfb\x8f\x92\xea\xac\xac\x7e\x7a\x9a\xac\x3e\x53\x05\x7b\xcc\xec\xa7\x1d\xe4\xb2\x44\x99\xc7\x50\x88\xfd\x0a\xba\xe2\xa4\x76\x14\x6b\xcb\x6e\x75\xfb\x4d\x72\x67\xa3\x23\xb4\xe4\xde\xdb\x9d\x07\xd7\xaa\xeb\x1f\xbb\xa6\x67\xb5\x2b\xe9\x9a\x60\x3b\x64\x33\xc1\x0e\xd0\x66\x94\x99\x78\xee\xe9\xe7\xc5\xa5\x6f\xb5\x7f\x02\x7d\xec\x6e\xff\x5b\x70\xba\xd9\x4f\xeb\xba\xf3\x74\x35\xd7\x5e\xd0\x04\x34\x8d\x8c\x7a\x5e\x73\x6b\x67\x4e\xd8\x7d\xbd\x7d\x87\xfb\x8e\xf6\xf6\x1e\x3d\xa2\xba\x3b\x3f\x13\xbf\x7b\x1c\x6f\xbc\x8f\x6f\xbf\xb5\xcf\x9d\x33\x8d\x4c\xfa\x12\x6b\x2b\xaf\x6b\xcb\x33\x76\x7d\x9d\x65\x6a\xb3\x2f\xe3\x37\x0f\xaa\x1b\xf3\x0a\x57\xed\xbd\x54\x0c\x74\x19\xdd\x51\x81\xa1\xda\xb3\x36\x58\x4d\x4a\xa5\x63\x9c\x75\x70\xa9\x84\xc7\x59\x07\xd9\x95\x03\x87\xaf\x8e\xb3\x4e\x2a\xb5\x1c\x8f\xa8\x56\x34\x60\x07\xb9\xcc\x47\x42\xf2\xb2\x3e\x06\xab\x3d\xc5\x8e\x52\xcb\x34\xfe\x0a\x00\x00\xff\xff\x07\x3b\x5b\x5d\x48\x0b\x00\x00")

func resources_language_en_us_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_en_us_yml,
		"resources/language/en-US.yml",
	)
}

var _resources_language_ja_jp_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x5d\x4f\x13\x59\x18\xbe\x9f\x64\xfe\x43\xd3\xc6\x64\xbd\xa0\x05\xf5\xaa\x17\x26\x06\x75\x75\x17\x50\x41\xe2\x05\x70\x31\xb6\x87\x32\x4b\x99\x69\x3a\x43\x56\x34\x26\x3d\x33\x15\x0a\x2d\x81\x35\x80\xf2\x21\x5f\x96\x8f\x6d\x43\x8b\x80\xa1\xb5\xb8\xfd\x31\xef\x9c\x99\xf1\x8a\xbf\xb0\x39\x67\xfa\x09\x5d\xd7\xe8\x2e\x17\x84\xe4\xcc\xfb\x3c\xcf\xfb\x9c\xe7\x7d\x0f\x1e\x7b\x3f\x66\x67\xd6\x01\xe7\x9f\x8f\xb4\x75\xf6\x00\xce\x92\xf4\xb4\xb9\x7a\x02\xf8\x0d\xe0\x0d\x9e\xeb\x12\xa4\xd0\xb8\x10\x42\xdd\x72\x50\x1c\x16\x51\xb0\x6f\x3c\x10\x40\x8a\x32\x3c\x1e\x0e\x4f\xf8\x5d\xee\x5a\xf5\x8b\x2b\xed\x2f\x2f\x14\xbb\x79\xce\xc3\x40\x6b\x1f\x01\xce\x00\x8e\x5f\x04\x0d\x08\xaa\x28\x4b\x77\x05\x31\x8c\x82\x7e\x97\x9b\x22\x5d\xa8\x70\xf3\x1c\xcf\x75\x0b\xa2\x74\x27\x1a\x95\xa3\x8f\xc5\x88\xe2\x77\xb9\x01\xc7\x01\xaf\x80\x96\x02\x9c\x03\xed\x00\xf4\x33\xd0\x5e\x9b\x33\x67\x80\x97\x01\xef\x9b\x89\x12\x68\x49\xaf\xd7\xeb\x75\xf3\x5c\xbf\x24\x3c\x0d\xa3\x5b\x91\x48\x78\xa2\x0f\x29\x8a\x28\x4b\x7e\x97\xbb\x5b\x8c\x0a\x22\xe0\xac\xb9\x74\xc8\xf4\xc6\x2b\x47\xd6\xc2\xb1\x9d\x4d\x02\xde\x03\x3c\xeb\xd0\x9f\x9f\xa5\xec\xfd\x03\x92\x5b\x01\xed\x35\xe8\x18\xb4\x3d\xd0\x75\xd0\xf2\xac\x6c\x17\xf0\x1c\xe0\x4d\xc0\x8b\x8e\xd0\x4e\x59\x1a\x16\x43\x77\xc5\x30\xba\xf3\x2c\x80\x22\xaa\x43\x56\xa9\xd7\x17\x41\xdb\x02\x2d\x0d\x7a\xd6\x5a\x3c\x24\x85\x02\x2d\x10\x24\x49\x56\x3b\x65\x49\x42\x01\x95\x89\x6a\x14\x77\xf0\x9e\xb1\xcc\x81\x9e\x01\xfd\x98\x91\x7e\xa7\xb0\xde\x71\xe9\xc1\xaf\xd4\x37\x7d\x8d\x7e\xa5\x27\x9e\xa0\xa7\xf7\x64\x79\x14\x70\x8e\xcc\xbd\x31\xca\x5b\x80\x53\x0f\x68\x00\x18\xf6\x7b\x06\x10\x07\x2d\x79\x7e\x96\x62\x97\xab\xbf\xa3\x16\xeb\x09\xc0\x7b\x24\xb7\x61\x6f\xa5\x8c\xc2\x81\x9b\xe7\x7a\xc6\x83\x21\xc4\x60\x67\x40\x9f\x72\x7e\xb3\xfb\xf2\x8c\xa8\x6a\x44\xf1\xfb\x7c\xcf\x47\xbc\x63\x32\x0a\x89\xd1\xb0\x57\x8e\x86\xbc\x01\x89\x72\x68\xdb\x54\xa7\x56\x02\xad\x78\xa1\x23\x2b\xb7\x65\xcd\x4f\xda\xb1\x57\x80\xb3\x5f\x62\xef\xad\x8f\x5b\x97\xdb\xe1\xb9\x27\xe2\xa8\xd8\x25\x4a\xa3\x2c\x11\x95\xd4\xfc\x38\x2e\x13\x7e\x0f\x85\x23\x8f\xd1\x33\xd5\xef\x72\x1b\x9f\xcb\x80\xe3\xe6\x52\x11\x70\xde\x55\xed\x47\x19\x11\x65\xe9\xa9\xac\x7a\x9f\x4d\x3c\xf7\x85\x2b\x51\x56\x7c\xbf\x09\x6d\xbf\x3c\xf4\x75\xca\x63\x63\x82\x14\xf4\xb9\x00\xef\xd9\x99\x32\xe0\x62\x2b\x0a\xcf\xc0\x3f\x9a\x33\xc4\x6e\x20\x3f\x40\xe3\x1e\x11\x42\x68\x08\x70\xca\xde\x4d\x02\x4e\x03\xfe\x03\xb4\x69\x16\xf8\x0c\xe0\x24\xbb\xa3\x8d\xf3\xb3\x14\x79\xb5\x43\x66\x56\x01\xe7\xab\x61\x89\xb3\xd3\x3f\x01\x4f\xd2\x3f\xbe\x9a\x0b\x9e\xfb\x19\xa9\xd4\xcb\xfb\xd2\xb0\x5c\xf5\x72\x80\x9a\x59\xd5\xf1\xe2\x4a\xc7\xcb\xff\x57\x83\xe3\x08\xe8\x2b\x6c\x84\x0b\xa0\xbd\xae\x73\x35\xb0\x00\x4e\x9d\x9f\xa5\x8c\xd2\x8e\x51\x48\x02\xce\x59\x1f\xe7\xcd\xf5\xb5\xe6\x8f\x37\xa8\xb3\x35\xe3\x78\xce\xe3\x1a\x0b\xf9\xeb\xc0\xfa\x24\x4b\xf0\x3a\xbd\x1b\xd0\x34\xc0\x93\x46\x21\x46\x3e\xed\x92\xc5\x39\xc0\x71\x32\x9f\x00\x6d\x0e\xf0\x6a\xcb\xac\x51\x7f\xfa\x90\x10\x0d\x8c\xb0\xac\xff\x07\x5a\x07\x25\x6a\xb3\x8b\xfa\xfb\xc3\x1a\xff\x65\xe0\x7c\x55\x4f\x78\xce\xf3\x13\x99\x9c\x35\x53\x53\x24\xb7\xc2\x9c\x7a\x48\x9d\x6a\xbb\x59\x77\xed\x2a\xcf\x79\xbc\xec\xa7\xde\x78\x2f\x0a\x8a\x51\x14\xa0\x13\x31\x28\x35\x00\xb0\x9c\xb4\xdd\x74\x32\x72\x75\x50\x72\x64\x18\xa5\x19\x36\x37\x09\xd0\x92\xce\x22\xf7\xf3\x9c\x07\x49\x6d\xfd\x7d\x3c\xe7\x61\x63\x52\x7d\x19\xea\x4f\x41\x97\xa8\xb0\x81\xbb\x5c\xeb\xf8\xc4\xa0\x1f\x8b\x6a\x18\xdd\x19\x8b\xa8\x13\xec\x12\x2a\x56\xd5\x9e\x09\xfa\x10\xe0\x3d\x88\x61\x33\xbd\x66\x9d\x6c\x37\xce\x3f\x2b\xef\x94\x25\x55\x10\x25\xe5\x7e\x38\x8c\x42\x42\xf8\x89\x1c\x0d\xd2\x87\xc4\x2e\x2f\x90\xd5\x75\xa3\xbc\x65\xe2\xbc\x51\x38\x20\x07\x6f\xc9\xda\xfe\x97\x77\xeb\xe6\xf1\x22\x99\x7c\x45\x72\x45\x9a\xef\xd3\x23\x7b\x3b\x6b\x97\xa7\xcc\x52\x9a\x2c\xef\x9b\xc9\x5d\x33\x91\x71\xda\xf5\xfd\x2e\x8e\x8a\x42\x30\x68\xa6\xa6\x8c\x52\xda\xf8\x5c\xb6\x16\xf6\xcd\xa5\xa2\x79\xbc\x68\xe7\x4f\xc9\xf4\x2c\xf9\x2b\xd6\x7a\x75\x54\x57\x85\xa7\x02\xe0\x32\x37\x76\xac\xb5\x24\xd5\xc9\x0e\xe8\x1e\xaa\x6c\xb6\xaf\x61\x53\xf3\x2b\xa5\x4c\x10\xbd\xb4\x5b\xc1\x60\xed\x3d\x35\x4f\x4b\x64\x66\x93\xa4\x3f\xd8\x27\x3b\xf4\xc1\x28\x2f\x1b\x85\x59\xf3\x6d\xde\x28\xc4\x8c\x42\xc6\x5c\x9b\x36\x17\x13\xd6\x4a\xbc\x1b\x05\x45\x81\xd6\x5a\xd9\x65\x4b\x2b\xd2\xc7\xfb\x42\xe5\xc0\xc0\x58\x68\x68\x88\x9c\x1e\x59\xa5\x39\x7b\x3b\xeb\x9c\xda\xe5\x29\xe3\xd3\x64\x8d\xb5\x17\x45\x90\xa0\x5e\x66\x1d\x70\xb2\xd2\xba\x9a\x72\x91\xd3\x23\x33\x31\x4f\x66\x36\x9c\x03\x0a\xe7\xf0\x9d\x9f\xa5\xfa\x7b\xbb\xfc\x97\x32\x5d\xa3\x64\xff\x91\xa0\x20\xeb\xb5\x25\x8a\xc3\x5c\xc1\xa1\x6e\xd5\x6c\xea\x8f\x04\x05\x15\xd5\x9d\x5a\x3d\x31\x97\x0e\xbf\xcb\xa9\xe6\x4a\xe3\xf3\xa6\x79\xb4\x45\x0b\x2e\x34\x73\x99\xb6\x47\x56\x47\x44\x29\x24\x21\x45\xb9\xac\xa0\x25\x8e\xd3\x0e\x65\xad\xb7\x6b\x94\x73\xe6\x42\xb1\xc9\x34\x73\xe9\xd0\x5a\x89\x1b\x85\x4f\x2d\xdd\x73\x37\x2a\x69\xe9\x60\x23\x64\xcd\xc1\x26\xd0\x9a\x95\x1e\x92\xd8\xfc\xb2\x9c\xfe\xd6\xf6\x6f\xa3\x30\x6a\xdd\xfe\xb7\xe0\xb4\x6a\xdf\xa9\x6b\xcd\xd3\xb2\xb9\xc6\x82\x1a\x20\xcf\x79\xe8\x78\x25\x4e\xef\xdf\xf6\x77\xb4\x77\x5c\xeb\xb8\xd1\xde\x7e\xe3\x3a\xbd\xdd\xe9\x18\xf9\xb0\x4e\x8a\xc7\x64\xee\xd0\xff\xe8\x11\x5d\x71\x6c\x12\xed\xfc\x81\xbd\x1f\xf3\x57\x36\x99\xc7\x9e\xca\x90\xdc\x8a\x51\x9c\xa6\xb8\x74\xe5\x39\x62\x5c\x2d\xa2\xdb\xaf\xa0\x28\x5d\xac\x7e\x97\xbb\x46\x49\x75\x0c\x4a\x4d\x5c\xd4\xe1\x41\xa9\x89\xec\xc5\x95\x6b\x2f\x07\xa5\x66\x2a\xba\x21\xaf\xd3\xab\xa8\xc2\xf6\xc8\x6a\xe7\xb8\xa2\xca\x63\xec\xd8\xe5\x6e\x74\xb1\xa9\xd4\xcd\x73\x7f\x07\x00\x00\xff\xff\xd5\x57\x77\x0b\x01\x0c\x00\x00")

func resources_language_ja_jp_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_ja_jp_yml,
		"resources/language/ja-JP.yml",
	)
}

var _resources_language_zh_cn_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5d\x4f\x13\x5b\x1b\xbd\x9f\x64\xfe\x43\xd3\x89\xc9\xeb\x05\x05\xd4\xab\x5e\x98\x18\xd4\x57\xdf\x17\x38\x0a\x12\x2f\x80\x8b\xb1\xb3\x29\x73\x98\xee\x69\x3a\x43\x8e\x1f\x31\xa9\x46\x69\xab\x05\x6a\xa8\x58\xa0\x22\x20\x35\x3d\x12\x66\x90\x72\xec\xf4\x03\xfa\x67\xf6\xde\x33\xbd\xe2\x2f\x9c\xec\xd9\xfd\xa0\x30\xe6\x78\xec\x65\xf7\x3c\x6b\x3d\x6b\x3d\xcf\x5e\x5b\x70\xcc\x7d\xa7\x18\xc7\xe5\x43\xb2\x71\x44\xb2\x15\x64\x55\x9f\xce\xf6\x0d\x8d\xf2\xdc\xb0\x08\xc3\xf3\x62\x18\x8c\xa8\x92\x3c\x23\x03\x69\x7c\x3e\x14\x02\x9a\x36\x33\xaf\x28\x4f\x82\x3e\xff\xc5\xba\x67\x97\x06\x9e\xfb\x79\x4e\x70\xeb\xd9\x31\xb2\x16\xf1\x7e\x0e\xe7\x8b\xe7\xe1\x42\xa2\x2e\xab\xf0\xb6\x28\x2b\x40\x0a\xfa\xfc\xb4\xf4\x5c\x85\x9f\xe7\x78\x6e\x44\x94\xe1\xad\x58\x4c\x8d\x3d\x90\xa3\x5a\xd0\xe7\x27\xe9\x14\xaa\xd5\xc8\xab\xe5\x66\xd6\x68\xc6\xe3\x38\x51\x0d\x04\x02\x01\x3f\xcf\x4d\x40\xf1\x91\x02\x6e\x44\xa3\xca\x93\x71\xa0\x69\xb2\x0a\xe9\xd7\x1f\xb6\x48\xe9\x3d\xce\xbc\x1b\x91\x63\xa2\x6c\x67\x4b\x8e\x59\x26\xab\x07\xf6\xfa\xab\xd6\x37\xa7\xf5\x34\xfd\xeb\x73\x9c\x7c\x2a\x38\xc6\x89\x7d\x6c\xf8\x79\x6e\x48\x85\x33\x72\xf8\xb6\xac\x80\x5b\x8f\x43\x20\xaa\x33\xac\xe6\xeb\x45\xfb\xd8\x20\xab\x09\x54\xfb\x8e\xeb\x2f\xb1\x65\xd1\x4f\x45\x08\x55\x7d\x48\x85\x10\x84\x74\x97\xa4\xc3\x4a\xf6\x3f\xdb\xdb\x46\x73\xe5\x84\x2c\x15\x9c\x44\xc9\x3d\xf4\xa4\x1b\x9b\x87\xbf\xfd\x9f\x96\xe5\xab\x78\xad\x88\xaa\xd5\x87\xe0\xd1\x1d\x55\x9d\x23\x4b\x05\x92\xfd\x8e\xcb\x87\xb8\x1e\xc7\x19\x93\xd6\x36\x32\xce\x76\x1a\x55\x97\xa8\x5b\xf6\x9e\x89\x97\x3f\xfb\x79\x6e\x74\x5e\x0a\x03\x5a\x9f\x2c\x21\x2b\x4e\x92\x25\xd7\x38\x81\x75\xe1\x18\x8d\xe6\x07\x63\x56\xd7\xa3\x5a\xb0\xbf\xff\xe9\x6c\x20\xa2\x82\xb0\x1c\x53\x02\x6a\x2c\x1c\x08\xb5\xf4\x3b\x2f\xb2\x76\xa9\x66\x1b\xdb\x76\x66\x01\xbf\xcb\xf1\xdc\x43\x79\x4e\x1e\x96\xe1\x9c\xeb\x7c\x47\x11\xc3\xa2\xdc\x9e\x65\x2e\xed\x1d\xa0\x44\x1f\x80\xc7\x7a\xd0\xe7\x47\xc7\x0d\x3b\x5b\x74\xcc\x23\x92\x5b\x72\xcc\x32\x4e\x2d\xe2\x93\xb8\xaf\xdd\x8a\x36\x2b\xab\xf0\x91\xaa\x07\x1e\x3f\x79\xda\x3f\xa4\x46\x22\x22\x94\xfa\x7d\xe4\x53\xc1\xce\xbf\x65\x02\x70\xbe\x38\xf9\xc3\xc6\xa7\x91\xb5\x4f\x52\x27\x74\x59\x92\x07\x93\x74\x4b\xa2\x62\x18\x4c\xe3\x95\x2f\x3d\x1e\x9f\xac\xe0\xd7\x05\x92\x33\x71\xe6\x0b\x9b\x07\xcf\xfd\x17\xe8\x54\xde\x5d\x38\xa3\xb6\xe5\x51\x26\x2a\xab\x17\xf4\xd9\xa5\xc1\xe7\xff\x0c\xd8\x32\xfb\x70\x9b\xe4\x53\x24\x75\x82\x93\x07\xcd\xed\xbf\x9a\x1f\x77\x4e\xeb\x69\x74\xbc\x40\x72\x26\xfb\x13\x55\x17\x50\xad\x80\xac\xb7\x76\x6d\x85\x6c\xe6\x79\x4e\xe8\x36\xcd\x73\x82\x63\x96\x99\x5d\xbe\x48\x38\xc8\x00\xc8\x56\xa2\xb9\x93\xf3\x35\x13\x8b\x64\xf5\x80\x52\x9b\x3b\x6c\x30\xb4\xf3\x71\x20\xc6\x42\xb3\x74\x32\xff\x92\x78\x0a\xb2\x9b\xd6\xa6\xa3\x22\x7f\x4c\xc8\xc4\xfd\x70\x08\xfd\x6d\x09\x3c\x27\xfc\xa7\x99\x58\xc4\xc6\x3a\xce\xbc\x73\x85\xdd\xa3\xc2\xfa\xae\x77\x45\x5e\xe6\x39\x21\xe0\xfe\xba\x2a\xc6\x80\x24\xc7\x40\x88\x2e\xcb\x14\x3c\x03\xe0\xce\xa2\xef\x3a\x9b\xc0\xe5\x29\xc8\xda\xb0\x37\x0c\xba\x43\xcb\xa6\xbb\x55\x34\x2a\x48\x3e\x15\xe4\x39\x01\xc0\xbe\x89\x71\x9e\x13\x7e\x17\xfb\xfe\x77\xaf\x1d\x3f\xdd\xbc\x19\x96\x35\xca\xe0\x5d\xce\xfc\x70\x09\x1e\xc8\xba\x02\x6e\x45\xa2\x3a\x0d\x37\x66\x06\xb2\xaa\xf6\x9f\xd5\xd3\x7a\xba\x75\xa5\xbb\xa6\x0c\xa9\x50\x17\x65\xa8\xdd\x55\x14\x10\x16\x95\x87\x6a\x4c\xa2\xf1\xe4\x34\xb2\x78\x63\x13\x35\xb6\xc9\x0b\x13\x59\xfb\x2c\xc8\x9a\x1f\x37\x69\x0a\x2d\xbc\xc6\x46\xe5\xb4\x9e\xc6\xe5\x43\x67\x67\xcf\x69\x24\x48\x6d\x17\xaf\x15\xc9\xdb\x2f\x24\xf9\x95\x49\xec\xff\x43\x9e\x93\x45\x49\x22\xe9\x04\xaa\xed\xb2\x11\x91\xd5\x0a\xbd\x7b\x3f\x77\x81\x84\x16\x40\xeb\x22\xd1\x3e\xdd\x03\x7a\x2d\x5b\x29\xfb\xcb\xd8\x74\x1a\x67\x2f\x28\x9d\xe2\x0d\x49\xea\x44\x38\x29\xd7\xf0\x9b\x2d\xbc\xfb\xcd\x39\x2a\xb8\x61\xb5\x86\xac\x45\x92\x33\x91\x15\x47\xd6\x57\xba\xa5\xef\x93\xf6\xfa\xab\x11\x20\xc9\x22\xad\xb5\xf7\xd6\xec\x97\x15\xfa\x5e\x9c\xab\x9c\x9c\x8c\x84\xa7\xa7\x71\xf9\xd0\xae\x2d\x3b\x3b\x7b\xec\xd4\x69\x24\x50\x75\xa1\xc3\x3a\x06\xa2\x40\xd4\x2f\xb2\x4e\xb2\xe5\xf1\xae\xa6\x5c\xf4\xbd\x4a\x66\xf0\x9b\x4f\xec\x80\xc2\x31\xbe\xd3\x7a\x7a\x62\x6c\x38\x78\x61\xc9\x3b\x94\xee\xf3\x07\x24\x57\xab\x27\x0a\x63\x6e\xe1\x50\xb7\x3a\x36\x4d\x44\x25\x51\x07\x5d\xa7\x36\x8e\xc8\xea\xc1\x2f\x39\xd5\x5b\x89\x8e\xb7\x5a\x01\x70\x4e\xcc\x45\xda\x51\x55\x9f\x95\x61\x18\x02\x4d\xbb\xd8\x81\x27\x0e\x93\x43\x59\xbb\x72\x51\xc3\x20\xd9\x4a\x8f\x69\xec\x3d\x45\x56\xd5\xd3\x3d\xff\xd9\x4e\x3c\x1d\x3c\x0b\xd9\x71\xb0\x07\xb4\x63\xa5\x80\x93\x5b\xcd\xb5\xdd\x9f\x95\x7f\x13\x28\xc0\x5b\xfe\xcf\xe0\x78\xc9\x67\x75\xde\x3c\x9e\xe2\xce\x16\x74\x00\x69\x96\x65\x8b\x24\x59\xbe\x7b\x33\x38\x38\x30\x78\x65\xf0\xda\xc0\xc0\xb5\xab\x74\xba\xa9\x38\xfe\xb6\x89\x2b\x25\xbc\x7c\x10\xbc\x7f\x9f\xe7\x84\xf6\x1b\x4a\xe3\x2a\xd8\xca\x35\xc1\x49\x7c\xc5\xc6\x3a\xaa\xa4\x28\x2e\x0d\x40\xd6\x8c\xcf\x63\x75\x27\x34\x10\xa3\x49\x4b\xf3\xaf\x4d\x49\xfb\x98\x82\x3d\x5c\xd4\xe1\x29\xd8\x43\xf6\xec\xd2\x95\xe7\x53\xb0\x97\x8a\x86\xe5\x55\x3a\x8a\x36\xec\xa8\xaa\x0f\xcd\x6b\xba\x1a\x71\x8f\x3b\xaf\x11\xbb\x72\x67\x4b\xfd\x3c\xf7\x77\x00\x00\x00\xff\xff\xe4\x18\x10\x0b\x68\x0a\x00\x00")

func resources_language_zh_cn_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_zh_cn_yml,
		"resources/language/zh-CN.yml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"resources/language/en-US.yml": resources_language_en_us_yml,
	"resources/language/ja-JP.yml": resources_language_ja_jp_yml,
	"resources/language/zh-CN.yml": resources_language_zh_cn_yml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources/language/en-US.yml": &_bintree_t{resources_language_en_us_yml, map[string]*_bintree_t{
	}},
	"resources/language/ja-JP.yml": &_bintree_t{resources_language_ja_jp_yml, map[string]*_bintree_t{
	}},
	"resources/language/zh-CN.yml": &_bintree_t{resources_language_zh_cn_yml, map[string]*_bintree_t{
	}},
}}
