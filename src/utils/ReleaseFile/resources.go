package ReleaseFile

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _resources_language_en_us_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xe1\x6a\xdc\x46\x10\xc7\xbf\x0b\xf4\x0e\x83\x8e\xa3\x0d\xc4\xba\x06\xd2\x0f\x15\xc5\x10\xbb\x4e\x53\x1a\xb7\xc1\xe7\x10\x42\x6c\xc8\xde\x6a\x24\x0d\xb7\x9e\x51\x77\x47\xbd\x53\x43\xde\xa0\x8f\xd4\x77\xea\x2b\x94\x5d\xdd\xe5\x2e\x2e\x6e\x0b\xf5\x17\xc3\xed\xcc\x7f\xfe\xf3\xfb\x8f\x66\x2f\x0d\xb7\x83\x69\x11\x3a\x13\x60\x85\xc8\x60\x3b\xc3\x2d\xd6\xa0\x02\xc8\x27\xaf\x97\x79\xb6\xaf\xb9\x94\x9a\x1a\xc2\x7a\x39\x58\x8b\x21\x34\x83\x73\x63\x05\xc5\x3f\x4a\x7c\x98\x7f\xf5\xb1\xc8\xb3\x59\x92\x82\x5a\x30\x00\x8b\x22\xe0\x96\x82\xde\x97\xb6\x46\x49\xf8\xb9\x21\x87\x75\x05\x45\xec\xfd\xd4\x32\x75\x14\x79\x96\x67\xb3\xeb\x8e\x02\xb8\xfd\xd8\x86\x1c\x02\x05\xe8\xbd\xfc\x4a\x35\xd6\xb0\x1a\xe1\xed\xdb\x6b\xf8\xb6\x53\xed\x43\xb5\x58\x6c\x36\x9b\x72\x1c\xb5\xb4\x22\x6e\x71\x9a\x67\x97\x86\xf8\xc2\x7b\xf1\xd7\xd4\x87\x0a\x8a\x57\x1e\x43\x00\xc3\x23\xac\x71\x4c\x7b\x6f\x49\xcb\xb2\x2c\xf2\xec\x35\x9b\x95\xc3\x67\x7d\xef\xc6\x25\x86\x40\xc2\x15\x14\xd3\x8f\xb1\xd0\xc4\x07\x68\xc4\x83\x01\xc6\x0d\xec\x6a\xe2\xd3\x25\x79\x43\x8f\xa1\x77\x68\x02\x82\xed\xd0\xae\x41\x3b\x84\x25\xaa\x12\xb7\xa1\xc8\xb3\x73\xe1\x86\xda\xe7\xe4\xf0\x62\x6b\xb1\xd7\x49\x3d\x39\x03\x62\xb0\xe9\x79\x68\x12\x94\x58\x6e\x98\x45\xcf\x85\x19\xad\x26\xf9\xcf\xbc\x38\xe2\xf5\xa7\xc1\x60\xc5\x7b\xb4\xea\xc6\x7b\x16\x8e\xc6\x5f\x0d\xfc\xf3\x8f\x15\x14\x57\xb2\x12\x85\x37\xb8\x7a\x21\xb2\x06\x8f\x3b\x2b\x80\x49\xba\xfe\xf3\x8f\xdf\xfd\xc0\x4c\xdc\x82\x30\xf4\xe2\x75\x1f\xea\x4f\x43\xdd\x62\x05\x45\xfa\x3f\x25\x73\x84\x26\xdd\x08\xec\x33\xf8\xad\x2b\xef\x04\x5b\xf2\xae\x14\xdf\x96\x96\x0f\xbe\x84\xd5\x58\x4d\x70\x4c\x7d\x47\x4c\x41\xbd\x51\xf1\x79\xf6\x86\xd6\xf4\x92\x78\x9d\x90\x7c\x0e\x3e\xa9\x47\x1f\xff\xae\x03\xc9\xda\x0b\x74\xfd\x35\x6e\x35\xe6\x3d\x35\xb4\x12\x95\xf6\x06\x5b\xd2\x6e\x58\x95\x56\xee\x16\x3c\x1a\xb6\x46\x6b\xb3\xb8\xc4\x9a\x4c\x74\x71\x72\x26\x3a\x9b\x5f\x7c\x3d\xff\xe6\xc9\xfc\xec\xbb\xf9\xc5\xd3\xf9\xd9\xd9\xfc\xd9\xd3\x14\x3d\x71\x50\x3f\xd8\xc8\x2c\x4c\x14\xce\x0d\x7f\xa1\xd0\x10\xd7\xf0\x2e\x1e\x5b\x6f\x5a\xbc\x8d\x91\xbe\x7b\x10\xc7\xed\xdf\x4e\xc5\x4c\xab\x10\xf7\x83\xc6\xf3\xde\x25\x9a\x67\xdf\xa3\x46\x4b\x3f\x70\x23\x7b\x30\xc7\x03\x3f\xcc\x9f\x7c\x9c\x86\x45\x3c\xff\x59\x77\xff\x65\x21\x44\xb7\x60\x65\x70\x75\xfa\xee\x56\x08\x8d\x0c\x5c\x3f\x86\xd5\x30\xb5\x36\xe2\x9c\x6c\xe2\x41\x78\x0c\x83\xd3\x00\x1b\xf4\xbb\xaa\x3c\x9b\x1d\x56\xce\xb3\xd9\x8e\xf5\x10\x10\x8a\xbb\xb6\x7a\x15\xb5\x95\xd4\x61\x11\xe1\xff\x32\xa0\x1f\xc1\xb4\x86\x78\x4a\x3b\x2e\xb5\x44\xe3\x6d\x57\x41\xf1\xbf\xcd\xdc\x70\x44\x70\x64\xe1\x7d\x84\x73\x64\xe2\xfd\x3d\x13\x13\x84\x07\x43\x5a\xec\x37\xcb\xb3\xd9\x97\x1e\x6b\x8a\xe0\xd2\xba\x51\xf2\xf6\xe4\xf4\xb0\xfa\xa3\x3c\x9b\x95\xe9\xef\xb0\xd8\xd5\xae\xa3\x82\xe2\x86\x0f\xfd\x29\xa6\x93\xd3\x29\xb8\x47\x37\xd1\xc4\x5f\x01\x00\x00\xff\xff\x71\x0e\x5f\x37\x97\x05\x00\x00")

func resources_language_en_us_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_en_us_yml,
		"resources/language/en-US.yml",
	)
}

var _resources_language_ja_jp_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x51\x4f\xdb\x56\x14\xc7\xdf\x2d\xf9\x3b\x58\x8e\x22\xad\x0f\x38\xab\xd4\x3d\x2c\x0f\x95\x0a\xa3\xeb\xb4\xd2\x4e\xa5\x53\x1f\xa0\x0f\xc6\xb9\x38\x57\x98\xeb\xc8\x71\xa4\xd2\xaa\x12\xe7\x3a\x4d\x29\x71\x15\x86\x46\xab\x41\x07\xcb\xa0\xc0\x12\x91\x54\xea\x2a\x85\x91\x89\x0f\x73\xe2\xc4\x7b\xe2\x2b\x4c\xf7\x86\x00\xcb\xba\x4d\x5a\xb7\x3c\x44\x96\xee\x3d\xff\xf3\x3f\xbf\xf3\xbf\x89\x78\x7f\x31\xae\x6d\x22\x34\x1f\x66\x47\xc6\x6e\x21\xd4\xa3\x9d\x67\xdd\x8d\x9f\x11\x5e\x22\x6c\xa9\xca\x4d\x93\xd9\x05\xd3\x26\x13\x6e\x86\xce\x52\x92\x99\x2c\x58\x16\xc9\xe7\x67\x0b\x8e\xb3\x90\xd6\xf4\xb3\xea\x47\xc9\x8f\x1f\x0f\x15\xeb\xaa\x92\x90\xa2\x67\x97\x10\x6a\x08\xc5\x61\x51\xcb\xf4\xa9\xcb\xae\x9b\xd4\x21\x99\xb4\xa6\x0b\xa5\xa1\x0a\x5d\x55\x54\x65\xc2\xa4\x6c\xdc\xf3\x5c\xef\x2e\xcd\xe5\xd3\x9a\x8e\x50\x44\x58\x47\x1e\x22\x34\x90\x1f\x60\xd0\x46\xbe\xda\x5d\x6e\x23\x7c\x87\xb0\xdf\x5d\x3a\x42\x5e\x36\x0c\xc3\xd0\x55\xe5\x6b\x66\xce\x38\xe4\x5a\x2e\xe7\x2c\x4c\x92\x7c\x9e\xba\x2c\xad\xe9\x13\xd4\x33\x29\x42\xbd\xfb\xe2\x8d\xf4\x5b\x3c\x3d\xea\x7d\xfb\x36\xae\x97\x11\xf6\x10\x9e\xf7\xdb\x9f\xb4\xc3\x78\xff\x20\x6a\xac\x23\x5f\xc5\x00\x90\xef\x61\x10\x20\x6f\xca\xb2\x5d\x84\x0a\xc2\x0f\x08\x6b\x7d\xa3\x63\x2e\x9b\xa5\xf6\x75\xea\x90\xf1\x07\x16\xc9\xf9\xfd\x66\xa7\xf5\xc1\x1a\xf2\x2a\xf2\x1d\x0c\xea\xbd\xb5\x37\x51\xab\x25\x0a\x4c\xc6\x5c\x7f\xcc\x65\x8c\x58\xbe\x34\x75\xd1\xdc\xc1\xb6\xec\x52\xc1\xa0\x86\xc1\x5b\xd9\xf4\x5f\x1a\xbb\x53\x60\xb7\xbf\x14\xdc\x82\x57\xe2\x56\xb0\x74\x8f\xcc\xdc\x70\xdd\x39\x84\x46\x54\x79\xd9\x39\xae\x22\x84\xb7\x45\x00\xa4\xf6\xb6\x14\x28\x22\x2f\x9f\xb4\x43\xb9\xdc\xe0\x7b\x81\x38\x58\x42\xd8\x8b\x1a\x5b\x71\x35\xec\xb4\x0e\x74\x55\xb9\x55\xc8\xd8\x44\xca\x2e\x63\xf0\xb4\xff\x2f\xf7\x95\xc8\xfa\x7e\x2e\x9f\x4e\xa5\x1e\x66\x8d\x79\x97\xd8\xd4\x73\x0c\xd7\xb3\x0d\x8b\x89\x1e\xfc\x47\xe1\x93\x1f\x21\x3f\x1c\x9a\xa8\xd7\xa8\xf6\x56\x4a\xf1\xe2\x13\x84\xfa\x6f\x8b\xdb\xbd\x77\xd5\x3f\x8f\xa3\x2a\xf7\xe8\x1c\xbd\x49\xd9\x9c\x4c\xc4\x69\x6a\x3e\x5c\x57\x1a\xbf\x41\x9c\xdc\x5d\xf2\xc0\x4f\x6b\x7a\xe7\xd7\x63\x84\x62\xf7\xc5\x21\x42\x53\x1b\xcc\x63\x53\x3f\x5b\x98\x31\x2c\x77\x3e\xc5\x16\x4c\x66\x99\x7e\xc6\x4c\x4d\x90\x0c\x35\x85\xa9\x91\x51\xd7\x4f\x24\xc7\x3f\x49\x7e\x7a\x39\x39\xfa\x59\x72\xfc\x4a\x72\x74\x34\x79\xed\x8a\x86\xb0\x17\xd7\x8e\x11\x0e\xdf\xd7\x32\x31\xf5\x97\xb0\xee\xcb\x8d\x34\xa7\x44\xfc\x73\xa6\x4d\xee\x23\x84\xf1\x6e\x19\x61\x07\xe1\x1b\xe4\xcf\xe4\x03\xa8\x21\x94\xe5\xce\xb6\x4e\xda\x61\xf4\xe4\x75\xb4\xbc\x81\xd0\x1c\x84\xa7\x28\x4f\x7f\x42\x28\x89\x8f\xbf\xcd\x89\xaa\x7c\x4e\x7c\x31\xc6\x17\x6c\xd6\x1d\xb0\x9d\x12\x70\x07\x3e\x1e\x25\x2f\x3f\xfe\x7f\x3d\xf4\x89\x60\xb0\x2e\x9f\x74\x0b\xf9\xea\x79\xaf\x0b\x5d\x10\xc2\x93\x76\xd8\x39\x7a\xdd\x69\x95\x11\x1a\xbd\x77\x2b\xdd\xcd\x57\x7f\xbc\xbc\x25\xc8\x9e\x81\x53\x95\x84\x36\x6f\xa7\xcf\x85\x83\x92\x4c\xf4\xa6\xd8\x0d\x72\x8e\x50\xea\xb4\x16\xa3\x5f\x76\xa3\xb5\x0a\x42\x31\x5a\x59\x42\x5e\x41\xd8\x78\x6f\xf6\x04\x9f\x49\x62\x7a\x56\x56\x66\xff\x3f\xf0\x3a\xcd\x04\x66\x4d\xf0\xfd\x60\x8f\xff\xf0\x00\x53\x03\x26\xaa\x92\xf8\x28\x2a\x3d\xef\x86\x4f\xa3\xc6\xba\x24\xf5\x95\x20\x35\x72\xf5\x9c\xda\x25\x55\x49\x18\xf2\x77\x3e\xf8\x1d\x92\xa1\x1e\xb1\xc4\x0b\x99\x66\x17\x04\x64\x4e\x46\xae\xf6\x33\x72\x69\x9a\xe9\xaa\xf2\x7b\x00\x00\x00\xff\xff\xf6\x2c\xad\xc8\x60\x06\x00\x00")

func resources_language_ja_jp_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_ja_jp_yml,
		"resources/language/ja-JP.yml",
	)
}

var _resources_language_zh_cn_yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x5f\x6f\xda\x56\x18\xc6\xef\x2d\xf9\x3b\x58\xb6\x2c\xad\x17\x98\x55\xea\x2e\xc6\x45\xa5\x92\xd1\x75\x5a\xe9\xa6\xa6\x53\x2f\x9a\x5e\x38\xe6\x60\x8e\xe2\x1c\x23\x63\xa4\xa6\x55\x25\x36\xb5\x01\x54\xa0\x44\xb0\x94\x75\x6c\x2d\x89\xa8\x90\x26\x6c\x14\xb2\xc0\xf8\x97\x2f\xe3\x73\x6c\x5f\xe5\x2b\x4c\xc7\x0e\xc9\x92\x25\x9a\xc6\xa5\xcf\x79\x9e\xe7\xfd\xbd\xcf\x41\xf0\xec\xbe\xd7\x2b\xe0\xd1\x01\xf9\xf5\x90\x34\xff\x72\xc6\x93\xe7\x99\xc8\xca\x03\x96\xb9\x2f\x23\x35\x2f\xab\x20\xa9\xa7\x60\x1a\x82\xd4\x6a\x5e\x51\x40\x2e\x97\xce\x6b\xda\x56\x8c\xe3\xff\xad\x7b\x21\x7e\xfe\x92\x67\x19\x21\xd0\x87\xc7\xce\xb8\x8a\xfb\x2d\xdc\xee\x5d\xb6\x53\x64\x13\xea\xe8\xae\x0c\x35\x90\x8a\x71\x3c\x95\x5e\x52\xf0\x2c\xc3\x32\x49\x19\xa2\x84\x61\xe8\xc6\x23\x98\xcd\xc5\x38\x9e\x54\xca\xce\x74\x4a\x5e\xbd\xf5\x9b\x96\x5f\x28\xe0\xe2\x44\x92\x24\x89\x67\x99\x1f\x90\xbc\xae\x81\x3b\xd9\xac\xb6\xb5\x0a\x72\x39\xa8\x23\x7a\xfb\xdd\x47\x32\xfc\x19\xd7\x77\x92\xd0\x90\xa1\xdb\x1c\x7a\xf6\x88\xec\x0e\xdc\xf7\xaf\x4e\xef\x9c\xcc\x2a\xf4\xd3\x7e\x81\x7c\xe8\x7a\xd6\xc2\x9d\x5b\x3c\xcb\xac\xe8\x28\x0d\xd5\xbb\x50\x03\x89\x67\x0a\xc8\x9a\xa1\x97\xff\xba\xea\xce\x2d\xb2\x5b\x74\xa6\x47\x78\xf6\x13\x1e\x8f\xe9\x55\x19\x21\xdd\x5c\xd1\x11\x02\x8a\x19\x84\x9c\xa5\x92\xfe\xbe\xdb\xb1\xfc\xc6\x82\xd4\xba\x5e\x71\x18\x1c\x5e\x19\xf7\x30\x8f\xbe\xfb\x96\xca\xda\x13\xfc\x4b\xcf\x99\x4c\x1e\x83\xf5\x7b\xba\xbe\x41\x6a\x5d\xd2\x3c\xc2\xa3\x03\x3c\x2b\xe0\xba\x4d\xb5\xc7\x75\xaf\x53\x71\x26\x35\xba\x2d\xf7\x0f\x1b\xbf\xdd\xe7\x59\xe6\x41\x3e\xa5\x02\xaa\x2f\x0d\x9d\x71\x81\x94\x86\xc1\xe2\x84\x70\x0a\xcf\x3a\xf6\xdf\x59\x19\xd3\xcc\xe6\x62\xd1\xe8\xf3\x8c\xb4\xa9\x03\x15\x1a\x9a\xa4\x1b\xaa\xa4\x9c\xf2\x7b\x3f\x36\xdd\xe1\xd4\xb5\x3a\x6e\x7d\x1b\xef\xb4\x58\xe6\x31\xdc\x80\xf7\x21\xda\x08\x36\x7f\x46\x14\x7a\xd1\xec\x2b\x65\x41\xec\x3d\xa0\x65\x1f\x81\x67\x66\x8c\xe3\x9d\xf9\xb1\xdb\xec\x79\xf6\x21\x69\xd5\x3c\x7b\x84\xcb\x55\xbc\x28\x70\xcb\x51\x54\x68\x66\xf2\xeb\x92\xa2\x6f\x46\xd1\x96\x8c\x14\xd9\x4c\xc9\xd1\x24\x48\x41\x99\x86\x47\xe2\xba\x29\x88\x89\x2f\xc4\x2f\x6f\x8a\xf1\xaf\xc4\xc4\x2d\x31\x1e\x17\xef\xdc\xe2\xc8\x87\xae\xdb\x7e\x13\x02\xe2\x76\xef\xc9\xb5\x60\x4f\x9d\x71\x9f\x94\x17\xf4\x31\x95\x06\x4f\xe8\x2b\xca\xca\x2a\x78\x8a\x1b\x9f\x2e\x74\xb0\x68\xe0\xd7\x5d\xd2\xb2\x71\xfd\x53\xd8\x17\xcb\x7c\x0d\x4c\x3a\xc1\x37\x28\xad\x2f\xf1\x69\x12\xc5\xbe\x68\xfa\x42\xbc\xf9\xf2\xbf\x0d\x4f\xcb\x38\xe8\x90\x76\x99\x94\x17\xb8\x34\xf0\x3b\x7f\xfa\xbf\xed\x9d\xcc\x2a\xce\x7c\x9b\xb4\xec\xf0\xa3\x33\xd9\x76\xa6\x5d\x67\xfc\xc6\x9d\x36\xc8\xef\x6d\x96\x11\xce\x87\x66\x19\xc1\xb3\x47\xe1\x3a\xb9\x4d\x35\x16\x1a\x90\x8f\x45\x7f\xaf\xc5\xf9\xc5\x2a\xd9\x1d\xd0\x68\x7b\x2f\x2c\x8e\x4e\xbe\x0a\x64\x43\xc9\xd0\xe6\xfe\x67\xf0\x1a\x0a\xff\x89\xcb\x38\x0a\x79\x7d\x60\x08\x77\x6d\x09\xd1\x25\x02\xcb\x08\x9f\xf9\xc5\x2a\xb6\xde\xe3\xfa\x4e\x00\xf6\x3d\x05\x8b\xdc\x3e\x87\xbc\xc1\x32\x82\x14\xfc\xce\x29\x1e\x82\x14\x34\x80\x42\x1f\xd3\x1a\xfa\x87\x41\xd0\x45\xe4\x76\xd8\xc0\x8d\x35\xc4\xb3\xcc\xdf\x01\x00\x00\xff\xff\x17\x31\x57\xc8\xc6\x04\x00\x00")

func resources_language_zh_cn_yml() ([]byte, error) {
	return bindata_read(
		_resources_language_zh_cn_yml,
		"resources/language/zh-CN.yml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"resources/language/en-US.yml": resources_language_en_us_yml,
	"resources/language/ja-JP.yml": resources_language_ja_jp_yml,
	"resources/language/zh-CN.yml": resources_language_zh_cn_yml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources/language/en-US.yml": &_bintree_t{resources_language_en_us_yml, map[string]*_bintree_t{
	}},
	"resources/language/ja-JP.yml": &_bintree_t{resources_language_ja_jp_yml, map[string]*_bintree_t{
	}},
	"resources/language/zh-CN.yml": &_bintree_t{resources_language_zh_cn_yml, map[string]*_bintree_t{
	}},
}}
